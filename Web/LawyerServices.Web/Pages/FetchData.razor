@page "/fetchdata"
@using LawyerServices.Common.LawyerViewModels
@using LawyerServices.Common.WorkingTimeModels
@using LawyerServices.Services.Data.AdminServices

@inject ILawyerService lawyerService

<div class="row">
    <p>sdasdasdasd</p
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
</div>
<div class ="container">
@*    <RadzenScheduler Data="@wtmodel" TItem="WorkingTimeExceptionViewModel" StartProperty="StarFrom" EndProperty="EndTo" TextProperty="AppointmentType" AppointmentSelect=@OnAppointmentSelect>
  <RadzenWeekView/>
</RadzenScheduler>*@
<div class = "row">
     <RadzenCard>
                    <h4 class="mb-4">DatePicker</h4>
                    <RadzenDatePicker @bind-Value=@value DateFormat="d" Change=@(args => OnChange(args, "DatePicker", "MM/dd/yyyy")) Class="w-100" />
                </RadzenCard>

               <RadzenCard>
            <h4 class="mb-4">Binding to simple collection</h4>
            <RadzenDropDown AllowClear="true" TValue="int" Class="w-100" 
                            Data=@(steps.Distinct())
                            Change=@(args => OnChangeStep(args, "DropDown")) />
        </RadzenCard>
        <RadzenCard>
                    <h4 class="mb-4">Начален час</h4>
                    <RadzenDatePicker TValue="DateTime?" ShowTime="true" TimeOnly="true" DateFormat="HH" Change=@(args => OnChangeStartHour(args, "Time-only DatePicker", "HH:mm")) Class="w-100" />
                </RadzenCard>
                <RadzenCard>
                    <h4 class="mb-4">Краен час</h4>
                    <RadzenDatePicker TValue="DateTime?" ShowTime="true" TimeOnly="true" DateFormat="HH" Change=@(args => OnChangeEndHour(args, "Time-only DatePicker", "HH:mm")) Class="w-100" />
                </RadzenCard>
</div>
</div>
<div class="row">
    <p>sdasdasdasd</p
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
<p>sdasdasdasd</p>
</div>
@code {

    [Parameter]
    public string LawyerId { get; set; }

    DateTime? value = DateTime.Now;

    private LawyerListItem model;
    private List<WorkingTimeExceptionViewModel> wtmodel;
    int step;
    int start;
    int end;
    DateTime date;
    private List<int> steps;

    protected override void OnInitialized()
    {
        wtmodel = new List<WorkingTimeExceptionViewModel>();
        steps = new List<int>() { 30, 60 };
        base.OnInitialized();
        model = this.lawyerService.GetLawyerById("14ece7ac-5562-4529-a49f-de494a2981d6");
        wtmodel = model.WorkingTime.WorkingTimeException.ToList();

    }
    void OnChange(DateTime? value, string name, string format)
    {
        date = value.Value;
    }
    void OnChangeStep(dynamic value, string name)
    {
        step = value;
    }
    void OnChangeStartHour(DateTime? value, string name, string format)
    {
        var a = value.Value.Hour;

    }
    void OnChangeEndHour(DateTime? value, string name, string format)
    {
        end = value.Value.Hour;
    }


    async Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<WorkingTimeExceptionViewModel> args)
    {
       

        
    }
}