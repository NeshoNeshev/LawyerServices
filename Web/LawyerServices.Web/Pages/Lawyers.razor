@page "/lawyers"
@page "/lawyers/{SearchByTown}"
@page "/lawyers/{SearchByTown}/{SearchByArea}"

@using LawyerServices.Common.LawyerViewModels
@using LawyerServices.Services.Data


@inject ISearchService searchService

<h3>Lawyers</h3>
<div>
    @if (!lawyers.Any())
    {

        <RadzenCard class="m-3">
            <h3 class="h5">Nqma nishto</h3>

        </RadzenCard>
    }
    @foreach (var lawyer in lawyers)
    {
        <RadzenCard class="m-3">
            <h3 class="h5">Contact</h3>
            <div class="d-flex flex-row">
                 <RadzenImage Path="https://res.cloudinary.com/dhtcvjbya/image/upload/v1630148727/SWAAAAA.jpg" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                <div>
                    <div>Employee</div>
                    <b>@(lawyer.FirstName + " " + lawyer.LastName)</b>
                    <div class="mt-3">Company</div>

                </div>
            </div>
        </RadzenCard>
    }
</div>


@code {

    [Parameter]
    public string SearchByTown { get; set; } = string.Empty;

    [Parameter]
    public string SearchByArea { get; set; } = string.Empty;

    string name;
    string areaId;

    private IEnumerable<LawyerListItem> lawyers;

    protected override async Task OnInitializedAsync()
    {
        this.searchService.Search(name,SearchByTown,SearchByArea);
        lawyers = this.searchService.SearchAllLawyersByTown<LawyerListItem>(SearchByTown);
    }
}
