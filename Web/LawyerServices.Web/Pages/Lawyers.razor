@page "/lawyers"
@page "/lawyers/{SearchByTown}"
@page "/lawyers/{SearchByTown}/{SearchByArea}"

@using LawyerServices.Common.AministrationViewModels
@using LawyerServices.Common.AreasOfActivityViewModels
@using LawyerServices.Common.LawyerViewModels
@using LawyerServices.Services.Data
@using LawyerServices.Services.Data.AdminServices.AreasOfActivityServices
@using LawyerServices.Web.QueryManipulator

@inject ITownService townService
@inject IAreasOfActivityService areaService
@inject ISearchService searchService

<div class="content marg">
    <div class="container-fluid">

        <div class="row">
            <div class="col-md-12 col-lg-4 col-xl-3 theiaStickySidebar">

                <!-- Search Filter -->
                <div class="card search-filter">
                    <div class="card-header">
                        <h4 class="card-title mb-0">Search Filter</h4>
                    </div>
                    <div class="card-body">
                        <div class="filter-widget">
                            <div class="cal-icon">
                                <RadzenDropDown AllowClear="false" TValue="string" Placeholder="@SearchByTown" Class="w-100"
                                                Data=@(towns.Select(c => c.Name).Distinct())
                                                Change=@(args => OnChange(args, "DropDown")) />
                            </div>
                        </div>
                        <div class="filter-widget">
                            <div class="cal-icon">
                                <RadzenDropDown AllowClear="false" TValue="string" Placeholder="@SearchByArea" Class="w-100"
                                                Data=@(areas.Select(c => c.Name).Distinct())
                                                Change=@(args => OnChangeArea(args, "DropDown")) />
                            </div>
                        </div>
                        <div class="filter-widget">
                            <h4>Select Specialist</h4>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="select_specialist" checked>
                                    <span class="checkmark"></span> Urology
                                </label>
                            </div>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="select_specialist" checked>
                                    <span class="checkmark"></span> Neurology
                                </label>
                            </div>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="select_specialist">
                                    <span class="checkmark"></span> Dentist
                                </label>
                            </div>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="select_specialist">
                                    <span class="checkmark"></span> Orthopedic
                                </label>
                            </div>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="select_specialist">
                                    <span class="checkmark"></span> Cardiologist
                                </label>
                            </div>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="select_specialist">
                                    <span class="checkmark"></span> Cardiologist
                                </label>
                            </div>
                        </div>
                        <div class="btn-search">
                            <button type="button" class="btn btn-block">Search</button>
                        </div>
                    </div>
                </div>


            </div>

            <div class="col-md-12 col-lg-8 col-xl-9">

                @if (!lawyers.Any())
                {

                    <RadzenCard class="m-3">
                        <h3 class="h5">Не открихме адвокати отговарящи на вашите критерии</h3>

                    </RadzenCard>
                }

                @foreach (var lawyer in lawyers)
                {

                    <div class="card">
                        <div class="card-body">
                            <div class="doctor-widget">
                                <div class="doc-info-left">
                                    <div class="doctor-img">
                                        <a href="doctor-profile.html">
                                            <img src="@lawyer.ImgUrl" class="img-fluid" alt="User Image">
                                        </a>
                                    </div>
                                    <div class="doc-info-cont">
                                        <h4 class="doc-name"><a href="" @onclick="() => OnFolow(lawyer.Id)" @onclick:preventDefault>@lawyer.Names</a></h4>
                                        <p class="doc-speciality">MDS - Periodontology and Oral Implantology, BDS</p>
                                        <h5 class="doc-department"><img src="/images/lawyer-1.png" class="img-fluid" width="19" height="19" alt="Speciality">Dentist</h5>
                                        <div class="rating">
                                            <RadzenRating ReadOnly="true" Stars="5" Value="4" />
                                            <span class="d-inline-block average-rating">(17)</span>
                                        </div>
                                        <div class="clinic-details">
                                            <p class="doc-location"><i class="oi oi-marker"></i>@lawyer.Address</p>

                                        </div>
                                        <div class="clinic-services">
                                            @foreach (var item in lawyer.AreasCompanies)
                                            {
                                                <span>@item.AreasOfActivity.Name</span>
                                            }

                                        </div>
                                    </div>
                                </div>
                                <div class="doc-info-right">
                                    <div class="clini-infos">
                                        <ul>
                                            <li><i class="oi oi-thumb-up"></i> 98%</li>
                                            <li><i class="oi oi-thumb-up"></i> 17 Feedback</li>
                                            <li><i class="oi oi-map-marker"></i> Florida, USA</li>
                                            <li><i class="oi oi-thumb-up"></i> $300 - $1000 <i class="oi oi-marker" data-toggle="tooltip" title="Lorem Ipsum"></i> </li>
                                        </ul>
                                    </div>
                                    <div class="clinic-booking">
                                        <a class="view-pro-btn" href="" @onclick="() => OnFolow(lawyer.Id)" @onclick:preventDefault>View Profile</a>
                                        <a class="apt-btn" href="booking.html">Book Appointment</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<style>
    .marg {
        margin-top: 80px;
        margin-bottom: 120px;
    }

    .containershadow {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }

    .shading {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
        background-color: #00BFFF;
    }

</style>

@code {


    [Parameter]
    public string SearchByTown { get; set; } = string.Empty;

    [Parameter]
    public string SearchByArea { get; set; } = string.Empty;
    string lawyerId;
    string name;

    private IEnumerable<TownViewModel> towns;
    private IEnumerable<LawyerListItem> lawyers;
    private IEnumerable<AreasOfActivityViewModel> areas;


    [QueryStringParameter]
    public string Value { get; set; }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        // 👇 Read the value of each property decorated by [QueryStringParameter] from the query string
        this.SetParametersFromQueryString(NavigationManager);

        return base.SetParametersAsync(parameters);
    }

    protected override async Task OnInitializedAsync()
    {
        this.areas = this.areaService.GetAll<AreasOfActivityViewModel>();
        this.towns = this.townService.GetAll<TownViewModel>();
        var exist = towns.Any(t => t.Name == SearchByTown);
        if (!exist)
        {
            SearchByArea = SearchByTown;
            SearchByTown = string.Empty;
        }
        await base.OnInitializedAsync();
        lawyers = this.searchService.Search(name, SearchByTown, SearchByArea).Result;
    }

    void OnChangeArea(object value, string name)
    {
        SearchByArea = value.ToString();
        var area = areas.FirstOrDefault(a => a.Name == value?.ToString());
        //lawyers = this.searchService.SearchAllLawyersByArea(area.Id);
        lawyers = this.searchService.Search(name, SearchByTown, SearchByArea).Result;
    }
    void OnChange(object value, string name)
    {
        SearchByTown = value.ToString();
        //search by area town
        var town = towns.FirstOrDefault(t => t.Name == value?.ToString());
        //lawyers = this.searchService.SearchAllLawyersByTown<LawyerListItem>(town.Id);
        //this.NavigationManager.NavigateTo($"lawyers/{town?.Id}");
        lawyers = this.searchService.Search(name, SearchByTown, SearchByArea).Result;

        Value = SearchByTown;

        // 👇 Update the URL to set the new value in the query string
        this.UpdateQueryString(NavigationManager);

    }
    void OnFolow(string id)
    {

        this.NavigationManager.NavigateTo($"lawyer/{id}");

    }
}
