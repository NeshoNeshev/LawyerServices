@page "/"
@using LawyerServices.Common.AministrationViewModels
@using LawyerServices.Common.AreasOfActivityViewModels
@using LawyerServices.Common.LawyerViewModels
@using LawyerServices.Services.Data
@using LawyerServices.Services.Data.AdminServices
@using LawyerServices.Services.Data.AdminServices.AreasOfActivityServices
@using LawyerServices.Web.Pages.Components

@inject ITownService townService
@inject ILawyerService lawyerService
@inject IAreasOfActivityService areaService

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>
<div>
    <EditForm Model="@towns" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <InputSelect id="town" @bind-Value="townName">

            @foreach (var town in towns)
            {
                <option value="@town.Id">@town.Name</option>
            }
        </InputSelect>
        <button type="submit">Submit</button>
    </EditForm>



</div>
<div class="row">
    <RadzenCard>
        <h4 class="mb-4">Binding to simple collection</h4>
        <RadzenDropDownDataGrid TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" AllowClear="true"
         Data=@(towns.Select(c => c.Name).Distinct().AsQueryable())
         Change=@(args => OnChange(args, "DropDownDataGrid")) Style="width:100%" />
    </RadzenCard>
</div>
<div class="row">
    <RadzenCard>
        <h4 class="mb-4">Binding to simple collection</h4>
        <RadzenDropDownDataGrid TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" AllowClear="true"
         Data=@(areas.Select(c => c.Name).Distinct().AsQueryable())
         Change=@(args => OnChangeArea(args, "DropDownDataGrid")) Style="width:100%" />
    </RadzenCard>
</div>
<button type="button" @onclick="Submit" class="btn btn-primary">Primary</button>
@code {

    private IEnumerable<TownViewModel> towns;
    string townName;
    string areaName;
    private IEnumerable<AreasOfActivityViewModel> areas;

    protected override void OnInitialized()
    {

        this.areas = this.areaService.GetAll<AreasOfActivityViewModel>();
        this.towns = this.townService.GetAll<TownViewModel>();
    }

    private void HandleValidSubmit()
    {
        //this.NavigationManager.NavigateTo($"lawyers/{townId}");
        // Process the valid form
    }
    void OnChange(object value, string name)
    {

        var  town = towns.FirstOrDefault(t => t.Name == value.ToString());
        townName = town.Name;
        //this.NavigationManager.NavigateTo($"lawyers/{town?.Id}");

    }
    void OnChangeArea(object value, string name)
    {
        var area = areas.FirstOrDefault(a=>a.Name == value.ToString());
        areaName = area.Name;

    }
    void Submit()
    {
        this.NavigationManager.NavigateTo($"lawyers/{townName}/{areaName}");
    }
    }
