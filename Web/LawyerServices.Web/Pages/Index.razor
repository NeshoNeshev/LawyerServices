@page "/"
@using LawyerServices.Common.AministrationViewModels
@using LawyerServices.Common.AreasOfActivityViewModels
@using LawyerServices.Common.LawyerViewModels
@using LawyerServices.Services.Data
@using LawyerServices.Services.Data.AdminServices
@using LawyerServices.Services.Data.AdminServices.AreasOfActivityServices
@using LawyerServices.Web.Pages.Components

@inject ITownService townService
@inject ILawyerService lawyerService
@inject IAreasOfActivityService areaService

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>
<div class="row px-3">

    <div class = "col-md-6 col-lg-4 col-xl-3 p-3">
         <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" 
                            Data=@(towns.Select(c => c.Name).Distinct())
                            Change=@(args => OnChange(args, "DropDown")) />
    </div>
    <div class = "col-md-6 col-lg-4 col-xl-3 p-3">
         <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" 
                            Data=@(areas.Select(c => c.Name).Distinct())
                            Change=@(args =>  OnChangeArea(args, "DropDown")) />
    </div>

</div>
<button type="button" @onclick="Submit" class="btn btn-primary">Primary</button>
@code {

    private IEnumerable<TownViewModel> towns;
    string? townName;
    string? areaName;

    private IEnumerable<AreasOfActivityViewModel> areas;

    protected override void OnInitialized()
    {

        this.areas = this.areaService.GetAll<AreasOfActivityViewModel>();
        this.towns = this.townService.GetAll<TownViewModel>();
    }

    private void HandleValidSubmit()
    {
        //this.NavigationManager.NavigateTo($"lawyers/{townId}");
        // Process the valid form
    }
    void OnChange(object value, string name)
    {

        var  town = towns.FirstOrDefault(t => t.Name == value?.ToString());
        if (town != null)
        {
            townName = town.Name;
        }
        
        //this.NavigationManager.NavigateTo($"lawyers/{town?.Id}");

    }
    void OnChangeArea(object value, string name)
    {
        var area = areas.FirstOrDefault(a=>a.Name == value?.ToString());
        areaName = area.Name;

    }
    void Submit()
    {
        this.NavigationManager.NavigateTo($"lawyers/{townName}/{areaName}");
    }
    }
