@page "/submit"
@using LawyerServices.Web.Shared.SubmitApplicationModels

<h3>SubmitApplication</h3>
<RadzenFieldset Text="Contact Info">
<div class = "container">
        <div class="row">
        @*   <div class="col-lg-6 offset-lg-3">
            <RadzenTemplateForm TItem="SubmitApplicationModel" Data=@model Submit=@OnSubmit InvalidSubmit=@OnInvalidSubmit>
            <RadzenFieldset Text="Personal information">

            <RadzenButton ButtonType="ButtonType.Submit" Text="Submit" ></RadzenButton>
            </RadzenFieldset>
            </RadzenTemplateForm>
            </div>*@
        <div class="col-md-4">
                <RadzenTextBox Placeholder="First Name" style="display: block" Name="FirstName" @bind-Value=@model.FirstName Class="w-100" />
                <RadzenRequiredValidator Component="FirstName" Text="First name is required" Popup=@popup Style="position: absolute" />
            </div>
       <div class="col-md-4">
                <RadzenTextBox Placeholder="Last Name" style="display: block" Name="LastName" @bind-Value=@model.LastName Class="w-100" />
                <RadzenRequiredValidator Component="LastName" Text="Last name is required" Popup=@popup Style="position: absolute" />
            </div>
            <div class="col-md-4">
                <RadzenTextBox Placeholder="Email" style="display: block" Name="Email" @bind-Value=@model.Email Class="w-100" />
                <RadzenRequiredValidator Component="Email" Text="Email name is required" Popup=@popup Style="position: absolute" />
            </div>
    </div>
</div>
    <RadzenTabs SelectedIndex="0">
        <Tabs>
            <RadzenTabsItem Text="Адвокат">
                <div class="col-lg-6 p-3 d-flex">
                    <RadzenCard Style="width: 100%;">
                        <h4 class="mt-4">Vertical Orientation</h4>
                        <RadzenCheckBoxList @bind-Value=@values TValue="int" Orientation="Orientation.Vertical" Change=@(args => OnChange(args, "CheckBoxList with vertical orientation"))>
                            <Items>
                                <RadzenCheckBoxListItem Text="Orders" Value="1" />
                                <RadzenCheckBoxListItem Text="Employees" Value="2" />
                                <RadzenCheckBoxListItem Text="Customers" Value="3" />
                            </Items>
                        </RadzenCheckBoxList>
                    </RadzenCard>
                </div>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Нотариус">
                <div class="row">
                    <div class="col-md-4 align-items-center d-flex">
                        <RadzenLabel Text="Country" />
                    </div>
                    <div class="col-md-8">
                        <RadzenDropDown @bind-Value="order.Country" Placeholder="USA" Data="@countries" style="width: 100%;" TextProperty="Name" ValueProperty="Id" Name="Country">
                        </RadzenDropDown>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 align-items-center d-flex">
                        <RadzenLabel Text="City" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox style="width: 100%;" Name="City" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 align-items-center d-flex">
                        <RadzenLabel Text="Address Line 1">
                        </RadzenLabel>
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox style="width: 100%;" Name="Address1" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 align-items-center d-flex">
                        <RadzenLabel Text="Address Line 2" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox style="width: 100%;" Name="Address2" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 align-items-center d-flex">
                        <RadzenLabel Text="State/Province/Region" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox style="width: 100%;" Name="State" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 align-items-center d-flex">
                        <RadzenLabel Text="Zip/Postal Code" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox style="width: 100%;" Name="Zip" />
                    </div>
                </div>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</RadzenFieldset>
@code {
    private SubmitApplicationModel models;
    SubmitApplicationModel model = new SubmitApplicationModel();
    bool popup;
    void OnSubmit(SubmitApplicationModel model)
    {

    }

    void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {

    }
    public class MyObject
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    IEnumerable<MyObject> data = new MyObject[] {
        new MyObject(){ Id = 1 , Name = "Orders"}, new MyObject() { Id = 2 , Name = "Employees"}, new MyObject() { Id = 3 , Name = "Customers" } };

    IEnumerable<int> values = new int[] { 1 };


    void OnChange(IEnumerable<int> value, string name)
    {

    }
    public class Order
    {
        public int CardId { get; set; }
        public string CardNr { get; set; }
        public DateTime ExpiryDate { get; set; }
        public string CardHolder { get; set; }
        public string Name { get; set; }
        public string Address1 { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public int Country { get; set; }
        public int StoreId { get; set; }
        public string Warehouse { get; set; }
        public string Region { get; set; }
        public string System { get; set; }
        public int TransId { get; set; }
        public string Register { get; set; }
        public string Clerk { get; set; }
        public decimal Amount { get; set; }
        public decimal Tax { get; set; }
        public DateTime OrderDate { get; set; }
        public DateTime ShipDate { get; set; }
    }

    public class CreditCard
    {
        public int CardId { get; set; }
        public string CardNr { get; set; }
    }

    public class Country
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    Order order = new Order()
        {
            ExpiryDate = DateTime.Parse("10/10/2022"),
            OrderDate = DateTime.Now,
            ShipDate = DateTime.Now
        };

    List<CreditCard> cards = new List<CreditCard>()
{
        new CreditCard() { CardId = 1, CardNr = "5555555555554444" },
        new CreditCard() { CardId = 2, CardNr = "4012888888881881" }
    };

    List<Country> countries = new List<Country>()
{
        new Country() { Id = 1, Name = "USA" },
        new Country() { Id = 2, Name = "Germany" }
    };

    void Submit(Order arg)
    {
        //
    }

    void Cancel()
    {
        //
    }

}