@page "/"
@using LawyerServices.Web.Shared
@inject IHttpClientFactory ClientFactory
<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.


  <div class="col-md-6 col-lg-4 col-xl-3 p-3">
        <RadzenCard>
            <h4 class="mb-4">Binding to simple collection</h4>
            <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" 
                            Data=@(towns?.Select(c => c.Name).Distinct())
                            Change=@(args => OnChange(args, "DropDown")) />
        </RadzenCard>
    </div>
<SurveyPrompt Title="How is Blazor working for you?" />

<div class="col-md-6 col-lg-4 col-xl-3 p-3">
        <RadzenCard>
            <h4 class="mb-4">Bind Value to model property</h4>
            <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data=@towns?.Select(t=>t.Name) @bind-Value=@myModel.MyValue
                            TextProperty="ProductName" ValueProperty="ProductID" Change=@(args => ChangeBound(args, "DropDown with bound Value")) Class="w-100" />
        </RadzenCard>
    </div>
@code {
    private CountryViewModel? country;

    MyObject myModel = new MyObject();

    IEnumerable<TownViewModel>? towns;
    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("LawyerServices.Web.ServerAPI.NoAuthenticationClient");
        country = await client.GetFromJsonAsync<CountryViewModel>("Home");
        towns = country?.Towns.ToList();
        //try
        //{
            
        //}
        //catch (AccessTokenNotAvailableException exception)
        //{
        //    exception.Redirect();
        //}
    }

    void OnChange(object value, string name)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
    }
    void ChangeBound(object value, string name)
    {
       
    }
    class MyObject
    {
        public int? MyValue { get; set; } = 3;
    }
}