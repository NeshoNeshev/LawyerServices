@page "/activity"
@using LawyerServices.Common.AreasOfActivityViewModels
@using LawyerServices.Common.LawyerViewModels
@using LawyerServices.Services.Data.AdminServices.AreasOfActivityServices
@using System.Security.Claims

@inject IAreasOfActivityService areaService;
@inject IHttpContextAccessor httpContextAccessor

@layout Administration.Shared.AdminLayout

<div class="container card-3">
    <h3>AreasOfactivity</h3>
    <div>
        @foreach (var item in allAreas)
        {
             <div class="form-check">
                <input class="form-check-input" type="checkbox" value="@item.Id" onclick="@(() => OnBynd(item.Id.ToString()))">
                <label class="form-check-label" for="flexCheckDefault">
                    @item.Name.ToString();
                </label>
            </div>
        }
        <button class="btn btn-primary" onclick="@OnSaveAreas">Click me</button>
        
        <div class="form-check">
                <input class="form-check-input" asp-for="model.Copyright" type="checkbox" value="Авторско право" onclick="@(() => OnBynd("Авторско право"))">
                <label class="form-check-label" for="flexCheckDefault">
                    Авторско право
                </label>
            </div>
    </div>
    <div class="form-group">
        <label for="exampleFormControlTextarea1">Large textarea</label>
        <textarea class="form-control rounded-0" id="exampleFormControlTextarea1" rows="10"></textarea>
    </div>


    <EditForm Model="@starship" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-conrol">
            <label>
                <InputTextArea @bind-Value="starship.Name"  DisplayName="Production Date" />
            </label>
        </div>
        <button type="submit">Submit</button>
    </EditForm>
    <label>
        Engineering Approval:

    </label>
</div>

<style>

    .form-control:focus {
        border-color: #FF0000;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 0, 0, 0.6);
    }

    .card-3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }

</style>
@code {

    AreasOfActivityInputModel model;
    MoreInformationViewModel moreInformation;
    List<AreasOfActivityViewModel> allAreas;
    IList<string> areasToAdd;
    public class MyObject
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }
    public class Starship
    {
        public bool boool { get; set; }
        public string Name { get; set; }
    }
    private Starship starship = new() { Name = "dasdadasd" };

    protected override void OnInitialized()
    {
        
        allAreas = areaService.AllAreas().ToList();
        areasToAdd = new List<string>();
    }
    private void HandleValidSubmit()
    {

    }


    void OnChange(IEnumerable<string> value, string name)
    {

    }
    void OnBynd(string value)
    {
         //check state to remuve unclick value
        if (areasToAdd.Contains(value))
        {
            areasToAdd.Remove(value);
        }
        else
        {
            areasToAdd.Add(value);
        }

        //service.Vsas("e316e076-dd97-44b9-bfd6-5f772cf22088");
    }
    public async Task OnSaveAreas()
    {
        var principal = httpContextAccessor.HttpContext?.User;
        var userId = principal.FindFirst(ClaimTypes.NameIdentifier)?.Value;

        await this.areaService.CreateAreas(areasToAdd, userId);
    }
}
