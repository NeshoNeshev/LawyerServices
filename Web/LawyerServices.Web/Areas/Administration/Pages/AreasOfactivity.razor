@page "/activity"
@using LawyerServices.Common.AreasOfActivityViewModels
@using LawyerServices.Common.LawyerViewModels
@using LawyerServices.Data.Models
@using LawyerServices.Services.Data
@using LawyerServices.Services.Data.AdminServices
@using LawyerServices.Services.Data.AdminServices.AreasOfActivityServices
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity

@inject NavigationManager navigationManager
@inject IAreasOfActivityService areaService;
@inject IHttpContextAccessor httpContextAccessor
@inject IUserService userService
@inject ICompanyService companyService


@layout Administration.Shared.AdminLayout
<AuthorizeView Roles="Lawyer">
    <Authorized>
        <div class="container card-3">
            <h3 class="text-center">Изберете сфери в които практикувате</h3>
            <div class="row">
                @foreach (var item in allAreas)
                {
                    <div class="col-sm-4 ">
                        <div class="card marg">
                            <div class="card-body">
                                @if (existingAreas.Contains(item.Id))
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="@item.Id" onclick="@(() => OnBynd(item.Id.ToString()))" checked>
                                        <label class="form-check-label" for="flexCheckDefault">
                                            @item.Name
                                        </label>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="@item.Id" onclick="@(() => OnBynd(item.Id.ToString()))">
                                        <label class="form-check-label" for="flexCheckDefault">
                                            @item.Name
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
                <button class="btn btn-primary" onclick="@OnSaveAreas">Click me</button>
            </div>
        </div>

        <div class="container card-3">
             <h3 class="text-center"> Добавете допълнителна информация</h3>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="УебСайт" @bind="@moreInformation.WebSite" rows="3"></textarea>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Езици" @bind="@moreInformation.Languages" rows="3"></textarea>

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Квалификации" @bind="moreInformation.Qualifications" rows="3"></textarea>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Образование" @bind="moreInformation.Education" rows="3"></textarea>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Опит" @bind="moreInformation.Experience" rows="3"></textarea>
                    </div>
                </div>
                <button class="btn btn-primary" onclick="@OnSaveInfo">Save</button>
            </div>
        </div>

    </Authorized>
    <NotAuthorized>
        @{
            navigationManager.NavigateTo("/Profile");
        }
    </NotAuthorized>
</AuthorizeView>


<style>

    .form-control:focus {
        border-color: #FF0000;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 0, 0, 0.6);
    }

    .card-3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }

    .marg {
        margin-bottom: 10px;
        border-color: blanchedalmond;
    }
</style>
@code {


    private MoreInformationInputModel? moreInformation;
    private List<AreasOfActivityViewModel>? allAreas;
    private List<string>? existingAreas;
    private IList<string>? areasToAdd;
    string userId;

    protected override void OnInitialized()
    {
        var principal = httpContextAccessor.HttpContext?.User;

        userId = this.userService.GetUserId(principal);

        moreInformation = this.companyService.GetMoreInformation(userId);
        allAreas = areaService.AllAreas().ToList();
        areasToAdd = new List<string>();
        if (userId != null)
        {
            existingAreas = areaService.GetAllAreasByCompanyId(userId).ToList();
        }

    }
    private void HandleValidSubmit()
    {

    }


    void OnSaveInfo()
    {
        //var principal = httpContextAccessor.HttpContext?.User;
        //var userId = this.userService.GetUserId(principal);
        companyService.CreateMoreInformation(moreInformation, userId);
    }
    void OnBynd(string value)
    {
        //check state to click many times
        if (areasToAdd.Contains(value))
        {
            areasToAdd.Remove(value);
        }
        else
        {
            areasToAdd.Add(value);
        }
    }
    public async Task OnSaveAreas()
    {
        //var principal = httpContextAccessor.HttpContext?.User;
        //var userId = this.userService.GetUserId(principal);
        await this.areaService.CreateAreas(areasToAdd, userId);
    }
}
