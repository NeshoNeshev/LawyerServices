@page "/Profile"

@using System.IO
@using LaweyrServices.Web.Shared.AdministratioInputModels
@using LaweyrServices.Web.Shared.LawyerViewModels
@using LaweyrServices.Web.Shared.ProfileModels
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Logging
@using System.Net

@inject NavigationManager navigationManager
@inject HttpClient Http
@layout Shared.AdministrationLayout


<AuthorizeView Context="authContext" Roles="Lawyer">
    <Authorized>

        <div class="content">
            <div class="container-fluid">

                <div class="row">

                    <div class="col-md-10 col-lg-11 col-xl-12">

                        <!-- Basic Information -->
                        <div class="card">
                            <div class="card-body">
                                <h4 class="card-title text-center">Профил</h4>
                                <div class="row form-row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <div class="change-avatar">
                                                <div class="profile-img">
                                                    <img src="@lawyer?.ImgUrl" alt="User Image">
                                                </div>
                                                <div class="upload-img">

                                                    <div class="change-photo-btn">
                                                        <span><i class="fa fa-upload"></i> Промени</span>

                                                        <InputFile class="upload" OnChange="@SingleUpload" />

                                                    </div>
                                                    <small class="form-text text-muted">Allowed JPG, GIF or PNG. Max size of 2MB</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @if (editLawyer == null)
                                    {
                                        <div>loading</div>
                                    }
                                    else
                                    {
                                        <EditForm class="form-row" Context="formContext" Model="@editLawyer" OnValidSubmit="@HandleValidSubmit">
                                            <DataAnnotationsValidator />
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Имена <span class="text-danger">*</span></label>
                                                    <InputText @bind-Value="editLawyer.Names" class="form-control" />
                                                    <ValidationMessage For="@(() => editLawyer.Names)" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Уеб Сайт <span class="text-danger">*</span></label>
                                                    <InputText @bind-Value="editLawyer.WebSite" class="form-control" />
                                                    <ValidationMessage For="@(() => editLawyer.WebSite)" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Адрес <span class="text-danger">*</span></label>
                                                    <InputText @bind-Value="editLawyer.Address" class="form-control" />
                                                    <ValidationMessage For="@(() => editLawyer.Address)" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Телефон <span class="text-danger">*</span></label>
                                                    <InputText @bind-Value="editLawyer.PhoneNumber" class="form-control" />
                                                    <ValidationMessage For="@(() => editLawyer.PhoneNumber)" />
                                                </div>
                                            </div>
                                           @* <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Имейл <span class="text-danger">*</span></label>
                                                    <InputText @bind-Value="editLawyer.Email" class="form-control" />
                                                    <ValidationMessage For="@(() => editLawyer.Email)" />
                                                    <p>@error</p>
                                                </div>
                                            </div>*@
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <div class="checkbox">
                                                        <InputCheckbox @bind-Value="editLawyer.IsPublicPhoneNuber" />
                                                        <ValidationMessage For="@(() => editLawyer.IsPublicPhoneNuber)" />
                                                        <label class="focus-label">Публичен телефон</label>
                                                    </div>
                                                </div>
                                            </div>
                                             <div class="col-md-6">
                                                <div class="form-group">
                                                    <div class="checkbox">
                                                        <InputCheckbox @bind-Value="editLawyer.IsOwnerPermision" />
                                                        <ValidationMessage For="@(() => editLawyer.IsOwnerPermision)" />
                                                        <label class="focus-label">Достъп от секретар</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <h4 class="card-title text-center">Описание на заглавната част</h4>
                                                    <div class="form-group mb-0">
                                                         <InputTextArea @bind-Value="editLawyer.HeaderText" class="form-control"  rows="5" />
                                                         <ValidationMessage For="@(() => editLawyer.HeaderText)" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <h4 class="card-title text-center">Секция за вас</h4>
                                                    <div class="form-group mb-0">
                                                      <InputTextArea @bind-Value="editLawyer.AboutText" class="form-control"  rows="5" />
                                                         <ValidationMessage For="@(() => editLawyer.AboutText)" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="text-center">
                                                <button class="btn btn-border-d btn-round btn-block" type="submit">Запази</button>
                                            </div>
                                        </EditForm>
                                    }

                                </div>
                            </div>
                        </div>
                        <!-- /Basic Information -->
                       

                    </div>
                </div>

            </div>

        </div>
    </Authorized>
    <NotAuthorized>
        @{
            navigationManager.NavigateTo("/Identity/Account/Login", true);
        }
    </NotAuthorized>
</AuthorizeView>
<style>
    .btn.btn-round {
        border-radius: 2px;
    }

    .btn-border-d {
        background: transparent;
        border: 1px solid #111111;
        color: #111;
    }

    .btn {
        border-radius: 0;
        font-family: "Roboto Condensed", sans-serif;
        text-transform: uppercase;
        letter-spacing: 2px;
        font-size: 11px;
        padding: 8px 37px;
    }

        .btn.btn-border-d:hover,
        .btn.btn-border-d:focus {
            background: #111111;
            color: #fff;
        }

    .btn-block {
        display: block;
        width: 100%;
    }

    a, .btn {
        transition: all 0.125s ease-in-out 0s;
    }
</style>


@code {
    [Parameter]
    public string? error { get; set; } = null;

    private LawyerProfileViewModel? lawyer;
    bool checkBox1Value;
    private EditLawyerProfileModel editLawyer;
    protected override async Task OnInitializedAsync()
    {
        lawyer = await this.Http.GetFromJsonAsync<LawyerProfileViewModel>("Profile/GetLawyerProfileInformation");
        editLawyer = new EditLawyerProfileModel();
        editLawyer.Id = lawyer.Id;
        editLawyer.Names = lawyer.Names;
        editLawyer.Address = lawyer.Address;
        editLawyer.WebSite = lawyer.WebSite;
        editLawyer.PhoneNumber = lawyer.PhoneNumber;
        editLawyer.IsPublicPhoneNuber = lawyer.IsPublicPhoneNuber;
        editLawyer.Email = lawyer.Email;
        editLawyer.AboutText = lawyer.AboutText;
        editLawyer.HeaderText = lawyer.HeaderText;
        editLawyer.IsOwnerPermision = lawyer.IsOwnerPermision;
        //#if DEBUG
        //    await Task.Delay(10000);
        //#endif


    }
    void NavigateTo()
    {
        //this.navigationManager.NavigateTo($"/lawyerbooking/{userId}");
    }
    //Todo: SetUserId to method
    async Task EditImage(InputFileChangeEventArgs args)
    {

        await this.Http.PostAsJsonAsync("Company/EditImage", args);


    }
    private async Task SingleUpload(InputFileChangeEventArgs e)
    {
        MemoryStream ms = new MemoryStream();
        await e.File.OpenReadStream().CopyToAsync(ms);
        var bytes = ms.ToArray();
        var name = e.File.Name;
        await this.Http.PostAsJsonAsync($"Company/EditImage?name={name}", bytes);
    }

    void OnChange(bool value, string name)
    {
        checkBox1Value = value;
    }
    public async void HandleValidSubmit()
    {
        var response =  await Http.PutAsJsonAsync("Profile/EditLawyerProfileInformation", editLawyer);
            
        
        if (response.IsSuccessStatusCode)
        {
            error = null;
             StateHasChanged();
        }
        else
        {
           
            error = "Съществува потребител с този имейл";
             StateHasChanged();
        }
        // Process the valid form
    }

}
