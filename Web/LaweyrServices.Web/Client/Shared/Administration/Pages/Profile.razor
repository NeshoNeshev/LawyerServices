@page "/lawyer-profile"

<PageTitle>Профил | Правен портал</PageTitle>

@using System.IO
@using LaweyrServices.Web.Client.Shared.Administration.Pages.Components
@using LaweyrServices.Web.Shared.AdministratioInputModels
@using LaweyrServices.Web.Shared.LawyerViewModels
@using LaweyrServices.Web.Shared.ProfileModels
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Logging
@using System.Net

@inject NavigationManager navigationManager
@inject HttpClient Http
@layout Shared.AdministrationLayout

<AuthorizeView Context="authContext" Roles="Lawyer">
    <Authorized>
        <div class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-10 col-lg-11 col-xl-12">
                        <div class="card">
                            <div class="card-body">
                                <h4 class="card-title text-center">Профил</h4>
                                <div class="row form-row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <div class="change-avatar">
                                                <div class="profile-img">
                                                    <img src="@ImgUrl" style="width: 150px;" title="@lawyer?.Names" alt="@lawyer?.Names">
                                                </div>
                                                <div class="upload-img">
                                                    <div class="change-photo-btn">
                                                        <span><i class="fa fa-upload"></i> Промени</span>
                                                        <InputFile class="upload" OnChange="@SingleUpload" />
                                                    </div>
                                                    <small style="color:red;">@error</small>
                                                    <small class="form-text text-muted">Позволен формат JPG, или PNG. Максимален размер 2MB</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @if (editLawyer == null)
                                    {
                                        <Spiner></Spiner>
                                    }
                                    else
                                    {
                                        <EditForm class="form-row" Context="formContext" Model="@editLawyer" OnValidSubmit="@HandleValidSubmit">
                                            <DataAnnotationsValidator />
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Имена <span class="text-danger">*</span></label>
                                                    <InputText @bind-Value="editLawyer.Names" class="form-control" />
                                                    <ValidationMessage For="@(() => editLawyer.Names)" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Уеб Сайт <span class="text-danger">*</span></label>
                                                    <InputText @bind-Value="editLawyer.WebSite" class="form-control" />
                                                    <ValidationMessage For="@(() => editLawyer.WebSite)" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Адрес <span class="text-danger">*</span></label>
                                                    <InputText @bind-Value="editLawyer.Address" class="form-control" />
                                                    <ValidationMessage For="@(() => editLawyer.Address)" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Телефон <span class="text-danger">*</span></label>
                                                    <InputText @bind-Value="editLawyer.PhoneNumber" class="form-control" />
                                                    <ValidationMessage For="@(() => editLawyer.PhoneNumber)" />
                                                </div>
                                            </div>
                                            @* <div class="col-md-6">
                                                <div class="form-group">
                                                <label>Имейл <span class="text-danger">*</span></label>
                                                <InputText @bind-Value="editLawyer.Email" class="form-control" />
                                                <ValidationMessage For="@(() => editLawyer.Email)" />
                                                <p>@error</p>
                                                </div>
                                                </div>*@
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <div class="checkbox">
                                                        <InputCheckbox class="form-check-input" @bind-Value="editLawyer.IsPublicPhoneNuber" />
                                                        <ValidationMessage For="@(() => editLawyer.IsPublicPhoneNuber)" />
                                                        <label class="custom">Публичен телефон</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <div class="checkbox">
                                                        <InputCheckbox class="form-check-input" @bind-Value="editLawyer.IsOwnerPermision" />
                                                        <ValidationMessage For="@(() => editLawyer.IsOwnerPermision)" />
                                                        <label class="focus-label">Достъп от секретар</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <div class="checkbox">
                                                        <InputCheckbox class="form-check-input" @bind-Value="editLawyer.IsRemainderForComming" />
                                                        <ValidationMessage For="@(() => editLawyer.IsRemainderForComming)" />
                                                        <label class="focus-label">Имейл потвърждения за запазени срещи</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <h4 class="card-title text-center">Описание на заглавната част</h4>
                                                    <div class="form-group mb-0">
                                                        <InputTextArea @bind-Value="editLawyer.HeaderText" class="form-control" rows="5" />
                                                        <ValidationMessage For="@(() => editLawyer.HeaderText)" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <h4 class="card-title text-center">Секция за вас</h4>
                                                    <div class="form-group mb-0">
                                                        <InputTextArea @bind-Value="editLawyer.AboutText" class="form-control" rows="5" />
                                                        <ValidationMessage For="@(() => editLawyer.AboutText)" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="text-center">
                                                <button class="btn btn-border-d btn-round btn-block" type="submit">Запази</button>
                                            </div>
                                        </EditForm>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        @{
            navigationManager.NavigateTo("/notfound", true);
        }
    </NotAuthorized>
</AuthorizeView>
<style>


    .btn.btn-round {
        border-radius: 2px;
    }

    .btn-border-d {
        background: transparent;
        border: 1px solid #111111;
        color: #111;
    }

    .btn {
        border-radius: 0;
        font-family: "Roboto Condensed", sans-serif;
        text-transform: uppercase;
        letter-spacing: 2px;
        font-size: 11px;
        padding: 8px 37px;
    }

        .btn.btn-border-d:hover,
        .btn.btn-border-d:focus {
            background: #111111;
            color: #fff;
        }

    .btn-block {
        display: block;
        width: 100%;
    }

    a, .btn {
        transition: all 0.125s ease-in-out 0s;
    }
</style>


@code {
    [Parameter]
    public string? error { get; set; } = null;

    [Parameter]
    public string? ImgUrl { get; set; }

    private long maxFileSize = 2097152;
    private LawyerProfileViewModel? lawyer;
    bool checkBox1Value;
    private EditLawyerProfileModel editLawyer;
    protected override async Task OnInitializedAsync()
    {
        var response = await this.Http.GetFromJsonAsync<LawyerProfileViewModel>("Profile/GetLawyerProfileInformation");
        if (response != null)
        {
            lawyer = response;
            ImgUrl = lawyer.ImgUrl;
            editLawyer = new EditLawyerProfileModel();
            editLawyer.Id = lawyer.Id;
            editLawyer.Names = lawyer.Names;
            editLawyer.Address = lawyer.Address;
            editLawyer.WebSite = lawyer.WebSite;
            editLawyer.PhoneNumber = lawyer.PhoneNumber;
            editLawyer.IsPublicPhoneNuber = lawyer.IsPublicPhoneNuber;
            editLawyer.Email = lawyer.Email;
            editLawyer.AboutText = lawyer.AboutText;
            editLawyer.HeaderText = lawyer.HeaderText;
            editLawyer.IsOwnerPermision = lawyer.IsOwnerPermision;
            editLawyer.IsRemainderForComming = lawyer.IsReminderForComing;
        }

    }
    async Task EditImage(InputFileChangeEventArgs args)
    {

        await this.Http.PostAsJsonAsync("Company/EditImage", args);


    }
    private async Task SingleUpload(InputFileChangeEventArgs e)
    {
        error = null;
        if (!HasImageExtension(e.File.ContentType))
        {
            error = "Невалиден формат";
            StateHasChanged();
            return;
        }
        if (e.File.Size > maxFileSize)
        {
            error = "Снимката не може да е по голяма от 2 mb";
            StateHasChanged();
            return;

        }

        MemoryStream ms = new MemoryStream();
        await e.File.OpenReadStream().CopyToAsync(ms);
        var bytes = ms.ToArray();
        var name = e.File.Name;
        var result = await this.Http.PostAsJsonAsync($"Company/EditImage?name={name}", bytes);
        ImgUrl = await result.Content.ReadFromJsonAsync<string>();
        StateHasChanged();


    }
    private bool HasImageExtension(string source)
    {
        if (source.EndsWith(".png") || source.EndsWith("/png") || source.EndsWith(".jpg") || source.EndsWith("/jpg") || source.EndsWith(".jpeg") || source.EndsWith("/jpeg"))
        {
            return true;
        }
        return false;
    }
    void OnChange(bool value, string name)
    {
        checkBox1Value = value;
    }
    public async void HandleValidSubmit()
    {
        var response = await Http.PutAsJsonAsync("Profile/EditLawyerProfileInformation", editLawyer);


        if (response.IsSuccessStatusCode)
        {
            error = null;
            NavigationManager.NavigateTo("/scheduler");
        }
        else
        {

            error = "Съществува потребител с този имейл";
            StateHasChanged();
        }
    }
}
