@using LaweyrServices.Web.Shared.DateModels
@using LawyerServices.Common

@inject DialogService DialogService
@inject HttpClient http
<RadzenTemplateForm TItem="Appointment" Data="@model" Submit=@OnSubmit>


    @if (model.Text.Contains(GlobalConstants.Meeting))
    {
        <div class="row" style="margin-bottom: 16px">
            <div class="col">
                <h3 class="text-center">@model.Text</h3>
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Начален час" />
            </div>
            <div class="col">
                <RadzenDatePicker ShowSeconds="false" @bind-Value="@model.Start" Name="Start" ShowTime="true" />
                <RadzenRequiredValidator Text="полето е задължително" Component="Start" />
            </div>
        </div>

        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Дело номер" />
            </div>
            <div class="col">
                <RadzenTextBox @bind-Value="@model.CaseNumber" Name="CaseNumber" />
                <RadzenLengthValidator Max="20" Text="Максимум 20 символа" Component="CaseNumber" />
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Съд" />
            </div>
            <div class="col">
                <RadzenTextBox @bind-Value="@model.Court" Name="Court" />
                <RadzenLengthValidator Max="30" Text="Максимум 30 символа" Component="Court" />
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Страна по делото" />
            </div>
            <div class="col">
                <RadzenTextBox @bind-Value="@model.SideCase" Name="SideCase" />
                <RadzenLengthValidator Max="30" Text="Максимум 30 символа" Component="SideCase" />
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Вид на делото" />
            </div>
            <div class="col">

                <RadzenDropDown AllowClear="true" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true"
                            Placeholder="@model?.TypeOfCase" Data=@typOfCase TextProperty="TypOfCase" ValueProperty="TypOfCase" Change=@(args => OnChange(args, "DropDown with placeholder")) />
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Допълнителна информация" />
            </div>
            <div class="col">
                <RadzenTextArea @bind-Value="@model.MoreInformation" Cols="30" Name="MoreInformation" />
                <RadzenLengthValidator Max="200" Text="Максимум 200 символа" Component="MoreInformation" />
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-3">
                @* <RadzenButton class="btn" ButtonType="ButtonType.Submit" Style="margin-bottom:10px;" Text="Промени" />*@
                <button type="submit" class="btn btn-primary" style="background-color:blue; margin-bottom:10px;">Промени</button>
            </div>

        </div>
    }
    else if (model.Text == GlobalConstants.AnotherConsultation)
    {
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Начален час" />
            </div>
            <div class="col">
                <RadzenDatePicker ShowSeconds="false" @bind-Value="@model.Start" Name="Start" ShowTime="true" />
                <RadzenRequiredValidator Text="полето е задължително" Component="Start" />
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Краен час" />
            </div>
            <div class="col">
                <RadzenDatePicker ShowSeconds="false" @bind-Value="@model.End" Name="End" ShowTime="true" />
                <RadzenRequiredValidator Text="полето е задължително" Component="End" />
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Име на клиента" />
            </div>
            <div class="col">
                <RadzenTextBox @bind-Value="@model.FirstName" Name="FirstName" />
                <RadzenLengthValidator Max="40" Text="Максимум 40 символа" Component="FirstName" />
                <RadzenRequiredValidator Component="FirstName" Text="въведете име" />
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Телефон" />
            </div>
            <div class="col">
                <RadzenTextBox @bind-Value="@model.PhoneNumber" Name="PhoneNumber" />
                <RadzenLengthValidator Max="15" Text="Максимум 15 символа" Component="PhoneNumber" />
                <RadzenRequiredValidator Component="PhoneNumber" Text="въведете телефонен номер" />
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Имейл" />
            </div>
            <div class="col">
                <RadzenTextBox @bind-Value="@model.Email" Name="Email" />
                <RadzenEmailValidator Component="Email" Text="Въведете валиден имейл адрес" />
            </div>
        </div>

        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Допълнителна информация" />
            </div>
            <div class="col">
                <RadzenTextArea @bind-Value="@model.MoreInformation" Name="MoreInformation" />
                <RadzenLengthValidator Max="200" Text="Максимум 200 символа" Component="MoreInformation" Style="col=" 40" />
            </div>
        </div>
         <div class="row justify-content-center">
            <div class="col-md-3">
                @* <RadzenButton class="btn" ButtonType="ButtonType.Submit" Style="margin-bottom:10px;" Text="Промени" />*@
                <button type="submit" class="btn btn-primary" style="background-color:blue; margin-bottom:10px;">Промени</button>
            </div>
            <div class="col-md-3">
                <button type="button" class="btn btn-danger" onclick="@Delete" style="background-color:red; margin-bottom:10px;">Изтрий</button>
            </div>
        </div>
    }
    else
    {
        <div class="row" style="margin-bottom: 16px">
            <div class="col">
                <h3 class="text-center">@model.Text</h3>
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Начален час" />
            </div>
            <div class="col">
                <RadzenDatePicker ShowSeconds="false" @bind-Value="@model.Start" Name="Start" ShowTime="true" />
                <RadzenRequiredValidator Text="полето е задължително" Component="Start" />
            </div>
        </div>
        <div class="row" style="margin-bottom: 16px">
            <div class="col-md-3">
                <RadzenLabel Text="Краен час" />
            </div>
            <div class="col">
                <RadzenDatePicker ShowSeconds="false" Name="End" @bind-Value="@model.End" ShowTime="true" />
                <RadzenRequiredValidator Component="End" Text="полето е задължително" />
            </div>
        </div>
        <AuthorizeView Context="Auth" Roles="Notary">
            <Authorized>

                <div class="row" style="margin-bottom: 16px">
                    <div class="col-md-3">
                        <RadzenLabel Text="Име на клиента" />
                    </div>
                    <div class="col">
                        <RadzenTextBox @bind-Value="@model.FirstName" Name="FirstName" />
                        <RadzenLengthValidator Max="40" Text="Максимум 40 символа" Component="FirstName" />
                        <RadzenRequiredValidator Component="FirstName" Text="въведете име" />
                    </div>
                </div>
                <div class="row" style="margin-bottom: 16px">
                    <div class="col-md-3">
                        <RadzenLabel Text="Телефон" />
                    </div>
                    <div class="col">
                        <RadzenTextBox @bind-Value="@model.PhoneNumber" Name="PhoneNumber" />
                        <RadzenLengthValidator Max="15" Text="Максимум 15 символа" Component="PhoneNumber" />
                        <RadzenRequiredValidator Component="PhoneNumber" Text="въведете телефонен номер" />
                    </div>
                </div>
                <div class="row" style="margin-bottom: 16px">
                    <div class="col-md-3">
                        <RadzenLabel Text="Имейл" />
                    </div>
                    <div class="col">
                        <RadzenTextBox @bind-Value="@model.Email" Name="Email" />
                        <RadzenEmailValidator Component="Email" Text="Въведете валиден имейл адрес" />
                    </div>
                </div>
                <div class="row" style="margin-bottom: 16px">
                    <div class="col-md-3">
                        <RadzenLabel Text="Вид на сделката" />
                    </div>
                    <div class="col">

                        <RadzenDropDown AllowClear="false" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true"
                                    Placeholder="@model?.Text" Data=@types TextProperty="TypOfCase" ValueProperty="Text" Change=@(args => OnChangeType(args, "DropDown with placeholder")) />
                    </div>
                </div>
                <div class="row" style="margin-bottom: 16px">
                    <div class="col-md-3">
                        <RadzenLabel Text="Допълнителна информация" />
                    </div>
                    <div class="col">
                        <RadzenTextArea @bind-Value="@model.MoreInformation" Name="MoreInformation" />
                        <RadzenLengthValidator Max="200" Text="Максимум 200 символа" Component="MoreInformation" Style="col=" 40" />
                    </div>
                </div>

            </Authorized>
        </AuthorizeView>
        <div class="row justify-content-center">
            <div class="col-md-3">
                @* <RadzenButton class="btn" ButtonType="ButtonType.Submit" Style="margin-bottom:10px;" Text="Промени" />*@
                <button type="submit" class="btn btn-primary" style="background-color:blue; margin-bottom:10px;">Промени</button>
            </div>
            <div class="col-md-3">
                <button type="button" class="btn btn-danger" onclick="@Delete" style="background-color:red; margin-bottom:10px;">Изтрий</button>
            </div>
        </div>
    }

</RadzenTemplateForm>
<style>
    .rz-button.btn-primary, .btn-primary.rz-paginator-element {
        background-color: #0074D9;
        color: #ffffff;
    }
</style>
@code {
    [Parameter]
    public Appointment Appointment { get; set; }
    Appointment model = new Appointment();
    IEnumerable<string> typOfCase = new List<string>()
    {
        "ГД","ВГД","ТрД", "ВТрД", "НОХД", "ВНОХД", "ЧНД", "ВЧНД", "АНД","ВАНД", "АД", "ВАД", "КД","ВКС","ТД"
    };
    IEnumerable<string> types = new List<string>()
    {
        "заверка на документи","нотариални актове","завещания","сделки с МПС","сделки с недвижими имоти","доброволни делби","удостоверяване на подписи",
        "нотариални покани","констативни протоколи","посещение на адрес","друго"
    };
    protected override void OnParametersSet()
    {
        model = Appointment;

    }
    void OnSubmit(Appointment model)
    {
        if (model.Start >= model.End && model.Text == GlobalConstants.Client)
        {
            return;
        }
        if (model.Text.Contains(GlobalConstants.Meeting))
        {
            model.End = model.Start.Value.AddHours(1);
            model.Text = GlobalConstants.Meeting + " / " + model.CaseNumber;
        }
        DialogService.Close(model);
    }
    void OnChange(object value, string name)
    {


    }
    void OnChangeType(object value, string name)
    {
        model.Text = value.ToString();

    }
    async Task Delete()
    {
        model.FromDelete = true;

        DialogService.Close(model);
    }
}