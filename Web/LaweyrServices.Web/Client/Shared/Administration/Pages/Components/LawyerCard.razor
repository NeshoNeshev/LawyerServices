@page "/bookingcard"
@using LaweyrServices.Web.Shared.LawyerViewModels
@using LaweyrServices.Web.Shared.WorkingTimeModels


@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@inject IHttpClientFactory ClientFactory
<div class="content marg">
    <div class="container-fluid">
       
       <RadzenScheduler Data="@wtmodel" TItem="WorkingTimeExceptionViewModel" StartProperty="StarFrom" EndProperty="EndTo" TextProperty="AppointmentType" >
                   <RadzenWeekView EndTime=@TimeSpan.FromHours(20) TimeFormat="HH" />
                </RadzenScheduler>
    </div>
</div>
<style>
    .marg {
        margin-top: 80px;
        margin-bottom: 120px;
    }

    .containershadow {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }

    .shading {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
        background-color: #00BFFF;
    }
</style>

@code {
    int zoom = 3;
    bool showMadridMarker;
    DateTime? value = DateTime.Now;
    DateTime? date;
    IList<DateTime>? dateTime;
    [Parameter]
    public string? LawyerId { get; set; }

    private LawyerListItem? model;
    private List<WorkingTimeExceptionViewModel>? wtmodel;


    void Change(object value, string name, string action)
    {

    }
    protected override async Task OnInitializedAsync()
    {


        LawyerId = "16e713fd-2a85-49c2-87f6-d1cc37493a8f";
        var client = ClientFactory.CreateClient("LaweyrServices.Web.ServerAPI.NoAuthenticationClient");
        dateTime = new List<DateTime>();
        dateTime.Add(DateTime.UtcNow.Date);
        dateTime.Add(DateTime.UtcNow.AddDays(1).Date);
        dateTime.Add(DateTime.UtcNow.AddDays(2).Date);
        dateTime.Add(DateTime.UtcNow.AddDays(3).Date);
        dateTime.Add(DateTime.UtcNow.AddDays(4).Date);
        dateTime.Add(DateTime.UtcNow.AddDays(5).Date);
        dateTime.Add(DateTime.UtcNow.AddDays(6).Date);
        base.OnInitialized();
        date = DateTime.UtcNow.AddDays(6);
        model = await client?.GetFromJsonAsync<LawyerListItem>($"Lawyer/GetLawyerById?lawyerId={LawyerId}");
        wtmodel = model?.WorkingTime.WorkingTimeException.ToList();

    }
    //async Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<WorkingTimeExceptionViewModel> args)
    //{
    //var authState = AuthenticationStateProvider.GetAuthenticationStateAsync();
    //var user = authState.Result.User;
    //if (!user.Identity.IsAuthenticated)
    //{
    //    this.navigationManager.NavigateTo("/Identity/Account/Login", true);
    //}
    //else
    //{

    //    this.navigationManager.NavigateTo($"/booking/{model.Id}/{args.Data.Id}");
    //}



    void OnChange(DateTime? value, string name, string format)
    {

    }
    void OnMapClick(GoogleMapClickEventArgs args)
    {

    }

    void OnMarkerClick(RadzenGoogleMapMarker marker)
    {

    }
    void OnClickRight()
    {

    }
    void OnClickLeft()
    {

    }
 }