@page "/notary-profile"
@using LaweyrServices.Web.Shared.AdministratioInputModels
@using LaweyrServices.Web.Shared.AministrationViewModels
@using LaweyrServices.Web.Shared.NotaryModels
@layout Shared.AdministrationLayout
@inject HttpClient Http
@*<AuthorizeView Roles="Notary">
    <Authorized>

    <div class="col-md-9 col-lg-10 col-xl-11">
    <div class="card">
    <div class="card-body">

    <!-- Profile Settings Form -->
    <form>
    <div class="row form-row">
    <div class="col-12 col-md-12">
    <h3 class="subtitle">Потребител</h3>
    </div>
    <div class="col-12 col-md-6">
    <div class="form-group">
    <label>Имена</label>
    <input type="text" class="form-control" value="Richard">
    </div>
    </div>
    <div class="col-12 col-md-6">
    <div class="form-group">
    <label>Уеб сайт</label>
    <input type="text" class="form-control" value="Wilson">
    </div>
    </div>

    <div class="col-12 col-md-6">
    <div class="form-group">
    <label>Email ID</label>
    <input type="email" class="form-control" value="richard@example.com">
    </div>
    </div>
    <div class="col-12 col-md-6">
    <div class="form-group">
    <label>Adress</label>
    <input type="text" value="+1 202-555-0125" class="form-control">
    </div>
    </div>
    <div class="col-12 col-md-6">
    <div class="form-group">
    <label>officetel</label>
    <input type="text" value="+1 202-555-0125" class="form-control">
    </div>
    </div>
    <div class="col-12 col-md-6">
    <div class="form-group">
    <label>officeemails</label>
    <input type="text" value="+1 202-555-0125" class="form-control">
    </div>
    </div>
    <div class="col-12">
    <div class="form-group mb-0">
    <label>Biography</label>
    <textarea class="form-control" rows="5"></textarea>
    </div>
    </div>
    <div class="form-group">
    <div class="form-check">
    <input class="form-check-input" name="email_confirm" id="email_confirm" type="checkbox" value="1" checked="">
    <label class="form-check-label" for="email_confirm">
    Имейл потвърждения за запазени или отказани прегледи
    </label>
    </div>

    <div class="form-check">
    <input class="form-check-input" name="email_remind" id="email_remind" type="checkbox" value="1" checked="">
    <label class="form-check-label" for="email_remind">
    Имейл напомняния за предстоящи прегледи
    </label>
    </div>

    <div class="form-check">
    <input class="form-check-input" name="sms_remind" id="sms_remind" type="checkbox" value="1" checked="">
    <label class="form-check-label" for="sms_remind">
    WorkInSaturday
    </label>
    </div>

    <div class="form-check">
    <input class="form-check-input" name="email_review" id="email_review" type="checkbox" value="1" checked="">
    <label class="form-check-label" for="email_review">
    WorkInSunday
    </label>
    </div>
    </div>
    </div>
    <div class="submit-section">
    <button type="submit" class="btn btn-primary submit-btn">Save Changes</button>
    </div>
    </form>
    <!-- /Profile Settings Form -->

    </div>
    </div>
    <div class="card">
    <div class="card-body">
    <div class="row">
    <div class="col-md-12 col-lg-6">

    <!-- Change Password Form -->
    <form>
    <div class="form-group">
    <label>Old Password</label>
    <input type="password" class="form-control">
    </div>
    <div class="form-group">
    <label>New Password</label>
    <input type="password" class="form-control">
    </div>
    <div class="form-group">
    <label>Confirm Password</label>
    <input type="password" class="form-control">
    </div>
    <div class="submit-section">
    <button type="submit" class="btn btn-primary submit-btn">Save Changes</button>
    </div>
    </form>
    <!-- /Change Password Form -->

    </div>
    </div>
    </div>
    </div>
    </div>

    </Authorized>
    <NotAuthorized>
    @{
    NavigationManager.NavigateTo("/");
    }
    </NotAuthorized>
    </AuthorizeView>*@
<AuthorizeView Context="authContext" Roles="Notary">
    <Authorized>

        <div class="content">
            <div class="container-fluid">

                <div class="row">

                    <div class="col-md-10 col-lg-11 col-xl-12">

                        <!-- Basic Information -->
                        <div class="card">
                            <div class="card-body">
                                <h4 class="card-title text-center">Кантора</h4>
                                <div class="row form-row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <div class="change-avatar">
                                                <div class="profile-img">
                                                    <img src="@notary?.ImgUrl" alt="User Image">
                                                </div>
                                                <div class="upload-img">

                                                    <div class="change-photo-btn">
                                                        <span><i class="fa fa-upload" style="cursor:pointer;"></i> Промени</span>

                                                        <InputFile class="upload" OnChange="@SingleUpload" />

                                                    </div>
                                                    <small class="form-text text-muted">Allowed JPG, GIF or PNG. Max size of 2MB</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @if (inputModel == null)
                                    {
                                        <div>loading</div>
                                    }
                                    else
                                    {
                                        <div class="row form-row">
                                            <EditForm class="form-row" Context="formContext" Model="@inputModel" OnValidSubmit="@HandleValidSubmit">
                                                <DataAnnotationsValidator />
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>Имена на кантората<span class="text-danger">*</span></label>
                                                        <InputText @bind-Value="inputModel.OfficeName" class="form-control" />
                                                        <ValidationMessage For="@(() => inputModel.OfficeName)" />
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>Вашите имена<span class="text-danger">*</span></label>
                                                        <InputText @bind-Value="inputModel.Names" class="form-control" />
                                                        <ValidationMessage For="@(() => inputModel.Names)" />
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>Уеб Сайт <span class="text-danger">*</span></label>
                                                        <InputText @bind-Value="inputModel.WebSite" class="form-control" />
                                                        <ValidationMessage For="@(() => inputModel.WebSite)" />
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>Адрес на кантората <span class="text-danger">*</span></label>
                                                        <InputText @bind-Value="inputModel.AddressLocation" class="form-control" />
                                                        <ValidationMessage For="@(() => inputModel.AddressLocation)" />
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>Имейли <span class="text-danger">*</span></label>
                                                        <InputText @bind-Value="inputModel.OfficeEmails" class="form-control" />
                                                        <ValidationMessage For="@(() => inputModel.OfficeEmails)" />
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>Телефони <span class="text-danger">*</span></label>
                                                        <InputText @bind-Value="inputModel.OfficeNumbers" class="form-control" />
                                                        <ValidationMessage For="@(() => inputModel.OfficeNumbers)" />
                                                    </div>
                                                </div>



                                                @*<div class="col-md-6">
                                                    <div class="form-check">
                                                        <InputCheckbox class="form-check-input" name="email_confirm" @bind-Value="inputModel.IsSendSms" />
                                                        <ValidationMessage For="@(() => inputModel.IsSendSms)" />

                                                        <label class="form-check-label" for="email_confirm">
                                                            СМС напомняния за запазен час на клиента
                                                        </label>
                                                    </div>
                                                </div>*@
                                                <div class="col-md-6">
                                                    <div class="form-check">
                                                        <InputCheckbox class="form-check-input" name="email_confirm" @bind-Value="inputModel.IsReminderForComing" />
                                                        <ValidationMessage For="@(() => inputModel.IsReminderForComing)" />

                                                        <label class="form-check-label" for="email_confirm">
                                                            Имейл напомняния за запазен час на клиента
                                                        </label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-check">
                                                        <InputCheckbox class="form-check-input" @bind-Value="inputModel.WorkInSaturday" />
                                                        <ValidationMessage For="@(() => inputModel.WorkInSaturday)" />
                                                        <label class="form-check-label" for="email_review">
                                                            Работи в събота
                                                        </label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-check">
                                                        <InputCheckbox class="form-check-input" @bind-Value="inputModel.WorkInSunday" />
                                                        <ValidationMessage For="@(() => inputModel.WorkInSunday)" />
                                                        <label class="form-check-label" for="email_review">
                                                            Работи в неделя
                                                        </label>
                                                    </div>
                                                </div>


                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <h4 class="card-title text-center">Секция за кантората</h4>
                                                        <div class="form-group mb-0">
                                                            <InputTextArea @bind-Value="inputModel.About" class="form-control" rows="5" />
                                                            <ValidationMessage For="@(() => inputModel.About)" />
                                                        </div>
                                                    </div>
                                                </div>


                                                <div class="row">
                                                    <div class="submit-section">
                                                        <button class="btn btn-border-d btn-round btn-block" type="submit">Запази</button>
                                                    </div>
                                                </div>

                                            </EditForm>
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                        <!-- /Basic Information -->


                    </div>
                </div>

            </div>

        </div>
    </Authorized>
    <NotAuthorized>
        @{
            NavigationManager.NavigateTo("/Identity/Account/Login", true);
        }
    </NotAuthorized>
</AuthorizeView>
<style>
    .btn.btn-round {
        border-radius: 2px;
    }

    .btn-border-d {
        background: transparent;
        border: 1px solid #111111;
        color: #111;
    }

    .btn {
        border-radius: 0;
        font-family: "Roboto Condensed", sans-serif;
        text-transform: uppercase;
        letter-spacing: 2px;
        font-size: 11px;
        padding: 8px 37px;
    }

        .btn.btn-border-d:hover,
        .btn.btn-border-d:focus {
            background: #111111;
            color: #fff;
        }

    .btn-block {
        display: block;
        width: 100%;
    }

    a, .btn {
        transition: all 0.125s ease-in-out 0s;
    }
</style>


@code {
    [Parameter]
    public string? error { get; set; } = null;

    private NotaryViewModel? notary;
    bool checkBox1Value;
    private EditNotaryModel? inputModel;
    protected override async Task OnInitializedAsync()
    {
        notary = await this.Http.GetFromJsonAsync<NotaryViewModel>("Notary/GetNotaryByNotaryId");
        inputModel = new EditNotaryModel();
        inputModel.About = notary.AboutText;
        inputModel.AddressLocation = notary.Address;
        inputModel.Id = notary.Id;
        inputModel.Names = notary.Names;
        inputModel.OfficeEmails = notary.OfficeEmails;
        inputModel.OfficeName = notary.OfficeName;
        inputModel.OfficeNumbers = notary.PhoneNumbers;
        inputModel.WorkInSaturday = notary.WorkInSaturday;
        inputModel.WorkInSunday = notary.WorkInSunday;
        inputModel.WebSite = notary.WebSite;
        inputModel.IsReminderForComing = notary.IsReminderForComing;
        inputModel.IsSendSms = notary.IsSendSms;
    }
    void NavigateTo()
    {
        //this.navigationManager.NavigateTo($"/lawyerbooking/{userId}");
    }
    //Todo: SetUserId to method
    async Task EditImage(InputFileChangeEventArgs args)
    {

        await this.Http.PostAsJsonAsync("Company/EditImage", args);


    }
    private async Task SingleUpload(InputFileChangeEventArgs e)
    {
        MemoryStream ms = new MemoryStream();
        await e.File.OpenReadStream().CopyToAsync(ms);
        var bytes = ms.ToArray();
        var name = e.File.Name;
        await this.Http.PostAsJsonAsync($"Company/EditImage?name={name}", bytes);
    }

    void OnChange(bool value, string name)
    {
        checkBox1Value = value;
    }
    public async void HandleValidSubmit()
    {
        var response = await this.Http.PutAsJsonAsync($"Notary/EditNotary", inputModel);


        //if (response.IsSuccessStatusCode)
        //{
        //    error = null;
        //    StateHasChanged();
        //}
        //else
        //{
        //    this.NavigationManager.NavigateTo("/Something-Went-Wrong");
        //    error = "/Something-Went-Wrong";
        //    StateHasChanged();
        //}
    }
}