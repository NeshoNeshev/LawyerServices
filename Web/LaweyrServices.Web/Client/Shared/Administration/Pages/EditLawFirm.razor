@page "/edit-law-firm"
@using LaweyrServices.Web.Client.Shared.Administration.Pages.Components
@using LaweyrServices.Web.Shared.AdministratioInputModels
@using LaweyrServices.Web.Shared.LawFirmModels
@using LaweyrServices.Web.Shared.WorkingTimeModels

@inject HttpClient Http
@layout Shared.AdministrationLayout

<AuthorizeView Roles="Moderator">
    <Authorized>
        <div class="col-md-10 col-lg-11 col-xl-12" data-select2-id="10">
            <div class="card" data-select2-id="9">
                <div class="card-body" data-select2-id="8">
                    <h4 class="card-title text-center">Информация за кантората</h4>
                    <div class="row form-row" data-select2-id="7">
                        @if (inputModel == null)
                        {
                            <Spiner></Spiner>
                        }
                        else if(response?.IsOwner == false)
                        {
                            NavigationManager.NavigateTo("/notfound");
                        }
                        else
                        {

                            <EditForm Model="@inputModel" class="form-row" Context="formContext" OnValidSubmit="@HandleValidSubmit">
                                <DataAnnotationsValidator />
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Имена <span class="text-danger">*</span></label>
                                        <InputText class="form-control" id="email" @bind-Value="inputModel.Name" />
                                        <ValidationMessage For="@(() => inputModel.Name)" />

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Адрес <span class="text-danger">*</span></label>
                                        <InputText class="form-control" id="address" @bind-Value="inputModel.Address" />
                                        <ValidationMessage For="@(() => inputModel.Address)" />

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Email <span class="text-danger">*</span></label>
                                        <InputText class="form-control" id="email" @bind-Value="inputModel.Email" />
                                        <ValidationMessage For="@(() => inputModel.Email)" />

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Facebook <span class="text-danger">*</span></label>
                                        <InputText class="form-control" id="faccebook" @bind-Value="inputModel.FacebookUrl" />
                                        <ValidationMessage For="@(() => inputModel.FacebookUrl)" />

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Linkedin <span class="text-danger">*</span></label>
                                        <InputText class="form-control" id="linkedin" @bind-Value="inputModel.LinkedinUrl" />
                                        <ValidationMessage For="@(() => inputModel.LinkedinUrl)" />

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Телефон <span class="text-danger">*</span></label>
                                        <InputText class="form-control" id="phone" @bind-Value="inputModel.PhoneNumber" />
                                        <ValidationMessage For="@(() => inputModel.PhoneNumber)" />

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Уеб сайт <span class="text-danger">*</span></label>
                                        <InputText class="form-control" id="url" @bind-Value="inputModel.WebSiteUrl" />
                                        <ValidationMessage For="@(() => inputModel.WebSiteUrl)" />

                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>За кантората <span class="text-danger">*</span></label>
                                        <InputTextArea class="form-control" id="text" rows="5" @bind-Value="inputModel.About" />
                                        <ValidationMessage For="@(() => inputModel.About)" />

                                    </div>
                                </div>
                                <div class="text-center">
                                    <button class="btn btn-border-d btn-round btn-block" type="submit">Запази</button>
                                </div>
                            </EditForm>
                        }


                    </div>
                </div>
            </div>

            <div class="card card-table flex-fill">
                <div class="card-header">
                    <h4 class="card-title text-center">Адвокати в @response?.Name</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover table-center mb-0">
                            <thead>
                                <tr>
                                    <th>Адвокат</th>
                                    <th>Календар</th>
                                    <th>Услуги</th>
                                    <th>Срещи</th>
                                </tr>
                            </thead>
                            <tbody>

                                @if (response == null)
                                {
                                    <p>loading</p>
                                }
                                else
                                {
                                    foreach (var lawyer in response.Companies)
                                    {
                                        @if (lawyer.IsOwnerPermision == true)
                                        {
                                            <tr>
                                                <td>
                                                    <h2 class="table-avatar">

                                                        <a href="profile.html">@lawyer.Names</a>
                                                    </h2>
                                                </td>
                                                <td>
                                                    <a href="/editscheduler/@lawyer?.Names/@lawyer?.Id" class="btn btn-sm bg-info-light" data-toggle="modal" data-target="#appt_details">
                                                        <i class="far fa-eye"></i> Календар
                                                    </a>
                                                </td>
                                                <td>
                                                    <a href="/editservicebyowner/@lawyer?.Names/@lawyer?.Id" class="btn btn-sm bg-info-light" data-toggle="modal" data-target="#appt_details">
                                                        <i class="far fa-eye"></i> Услуги
                                                    </a>
                                                </td>
                                                <td>
                                                    <a href="#" class="btn btn-sm bg-info-light" data-toggle="modal" data-target="#appt_details">
                                                        <i class="far fa-eye"></i> Срещи
                                                    </a>
                                                </td>
                                            </tr>
                                        }

                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        @{
            NavigationManager.NavigateTo("/notfound", true);
        }
    </NotAuthorized>
</AuthorizeView>
<style>
    .btn.btn-round {
        border-radius: 2px;
    }

    .btn-border-d {
        background: transparent;
        border: 1px solid #111111;
        color: #111;
    }

    .btn {
        border-radius: 0;
        font-family: "Roboto Condensed", sans-serif;
        text-transform: uppercase;
        letter-spacing: 2px;
        font-size: 11px;
        padding: 8px 37px;
    }

        .btn.btn-border-d:hover,
        .btn.btn-border-d:focus {
            background: #111111;
            color: #fff;
        }

    .btn-block {
        display: block;
        width: 100%;
    }

    a, .btn {
        transition: all 0.125s ease-in-out 0s;
    }
</style>
@code {

    private LawFirmViewModel? response;

    private EditLawFirmAdministrationModel? inputModel;

    protected override async Task OnInitializedAsync()
    {
        response = await Http.GetFromJsonAsync<LawFirmViewModel>($"EditLawFirmByOwner/GetLawFirmInformation");
        inputModel = new EditLawFirmAdministrationModel();
        inputModel.Name = response.Name;
        inputModel.About = response.About;
        inputModel.Address = response.Address;
        inputModel.Email = response.Email;
        inputModel.FacebookUrl = response.FacebookUrl;
        inputModel.Id = response.Id;
        inputModel.LinkedinUrl = response.LinkedinUrl;
        inputModel.PhoneNumber = response.PhoneNumbers;
        inputModel.WebSiteUrl = response.WebSiteUrl;
    }
    public async void HandleValidSubmit()
    {
        var response = await this.Http.PutAsJsonAsync("EditLawFirmByOwner/EditLawFirm", inputModel);
        // Process the valid form
    }
}