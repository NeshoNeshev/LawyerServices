@page "/createlawfirm"
@using LaweyrServices.Web.Shared.AministrationViewModels
@using LaweyrServices.Web.Shared.LawFirmModels
@using LawyerServices.Data.Models.Enumerations
@using Microsoft.AspNetCore.Authorization
@layout Shared.AdministrationLayout

@attribute [Authorize(Roles = "Administrator")]
@inject HttpClient Http

<h3 class="text-center">LawFirm</h3>


<div class="row mt-2">
    <div class="col-lg-6">

        @if (model == null)
        {
            <div>loading</div>
        }
        else
        {
            <!-- Register Form -->
            <EditForm Model="@model" OnValidSubmit="@OnSubmit" class="form-group" enctype="multipart/form-data">
                <DataAnnotationsValidator />

                <div class="form-group form-focus">
                    <InputText class="form-control floating" id="names" placeholder="Име на катората" @bind-Value="model.Name" />
                    <ValidationMessage For="@(() => model.Name)" />
                    <label class="focus-label">Име на катората</label>
                </div>
                <div class="form-group form-focus">
                    <RadzenDropDown AllowClear="true" TValue="string" Class="w-100"
                                Data=@(townModel?.Select(c => c.Name).Distinct())
                                Change=@(args => OnChange(args, "DropDown")) Placeholder="Изберете град" />
                </div>
                <div class="form-group form-focus">
                    <InputText class="form-control" id="email" placeholder="Имейл" @bind-Value="model.Email" />
                    <ValidationMessage For="@(() => model.Email)" />
                    <label class="focus-label">Имейл</label>
                </div>
                <div class="form-group form-focus">
                    <InputText class="form-control" id="website" placeholder="Адрес" @bind-Value="model.Address" />
                    <ValidationMessage For="@(() => model.Address)" />
                    <label class="focus-label">Адрес</label>
                </div>
                <div class="form-group form-focus">
                    <InputText class="form-control" id="phone" placeholder="Телефон" @bind-Value="model.PhoneNumber" />
                    <ValidationMessage For="@(() => model.PhoneNumber)" />
                    <label class="focus-label">Телефон</label>
                </div>
                <div class="form-group form-focus">
                    <InputTextArea class="form-control" id="text" placeholder="Описание" @bind-Value="model.About" />
                    <ValidationMessage For="@(() => model.About)" />
                    <label class="focus-label">Описание</label>
                </div>

                <div class="checkbox">
                    <InputCheckbox @bind-Value="model.PhoneVerification" />
                    <ValidationMessage For="@(() => model.PhoneVerification)" />
                    <label class="focus-label">Проведен разговор</label>
                </div>
                @*<div class="text-right">
                    <a class="forgot-link" href="login.html">Already have an account?</a>
                    </div>*@
                @*<button class="btn btn-primary btn-lg" type="submit">Signup</button>*@
                <div class="text-center">
                    <button class="btn btn-border-d btn-round btn-block" type="submit">Submit</button>
                </div>
            </EditForm>
            <!-- /Register Form -->
        }


    </div>
    <div class="col-lg-6">

        @if (success == true)
        {
            <div class="row">
                <p>@lawfirm</p>
            </div>
            @if (model == null)
            {
                <div>loading</div>
            }
            else
            {
                <!-- Register Form -->
                <EditForm Model="@model" OnValidSubmit="@OnSubmit" class="form-group" enctype="multipart/form-data">
                    <DataAnnotationsValidator />

                    <div class="form-group form-focus">
                        <InputText class="form-control floating" id="names" placeholder="Име на кантората" @bind-Value="model.Name" />
                        <ValidationMessage For="@(() => model.Name)" />
                        <label class="focus-label">Имена</label>
                    </div>
                    <div class="form-group form-focus">
                        <RadzenDropDown AllowClear="true" TValue="string" Class="w-100"
                                Data=@(townModel?.Select(c => c.Name).Distinct())
                                Change=@(args => OnChange(args, "DropDown")) Placeholder="Изберете град" />
                    </div>
                    <div class="form-group form-focus">
                        <InputText class="form-control" id="email" placeholder="Имейл" @bind-Value="model.Email" />
                        <ValidationMessage For="@(() => model.Email)" />
                        <label class="focus-label">Имейл</label>
                    </div>
                    <div class="form-group form-focus">
                        <InputText class="form-control" id="website" placeholder="Адресс" @bind-Value="model.Address" />
                        <ValidationMessage For="@(() => model.Address)" />
                        <label class="focus-label">Сайт</label>
                    </div>
                    <div class="form-group form-focus">
                        <InputText class="form-control" id="phone" placeholder="Телефон" @bind-Value="model.PhoneNumber" />
                        <ValidationMessage For="@(() => model.PhoneNumber)" />
                        <label class="focus-label">Телефон</label>
                    </div>
                    <div class="form-group form-focus">
                        <InputTextArea class="form-control" id="text" placeholder="about" @bind-Value="model.About" />
                        <ValidationMessage For="@(() => model.About)" />
                        <label class="focus-label">Телефон</label>
                    </div>

                    <div class="checkbox">
                        <InputCheckbox @bind-Value="model.PhoneVerification" />
                        <ValidationMessage For="@(() => model.PhoneVerification)" />
                        <label class="focus-label">Проведен разговор</label>
                    </div>
                    @*<div class="text-right">
                        <a class="forgot-link" href="login.html">Already have an account?</a>
                        </div>*@
                    @*<button class="btn btn-primary btn-lg" type="submit">Signup</button>*@
                    <div class="text-center">
                        <button class="btn btn-border-d btn-round btn-block" type="submit">Submit</button>
                    </div>
                </EditForm>
                <!-- /Register Form -->
            }
        }



    </div>
</div>
@code {

    private IEnumerable<TownViewModel>? townModel;
    private LawFirmInputModel? model = new LawFirmInputModel();
    private Profession profesion;

    [Parameter]
    public string? lawfirm { get; set; }


    bool? success = false;
    protected override async Task OnInitializedAsync()
    {
                                 #if DEBUG
        await Task.Delay(10000);
            #endif
        this.townModel = await Http.GetFromJsonAsync<IEnumerable<TownViewModel>>("Administrator/GetTowns");
    }
    private async Task OnSubmit()
    {


        var response = await Http.PostAsJsonAsync("Administrator/CreateLawFirm", model);
        if (response.IsSuccessStatusCode)
        {
            lawfirm = model.Name;
            success = true;
            StateHasChanged();
        }
        //test

        //await this.requestService.SetIsApproved(exist.Id);

    }
    void OnChange(object value, string name)
    {
        model.Town = value.ToString();

    }
}