@page "/administration"
@using LaweyrServices.Web.Client.Shared.Administration.Pages.Components
@using LaweyrServices.Web.Shared.AministrationViewModels
@using LaweyrServices.Web.Shared.RatingModels
@using Microsoft.AspNetCore.Authorization


@layout Shared.AdministrationLayout

@inject NavigationManager navigationManager
@inject HttpClient Http

<AuthorizeView Roles="Administrator">
    <Authorized>
        <div class="content container-fluid">
            <div class="page-header">
                <div class="row">
                    <div class="col-sm-12">
                        <h3 class="page-title">Welcome Admin!</h3>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item active">Dashboard</li>
                        </ul>
                    </div>
                </div>
            </div>
            @if (model == null)
            {
                <Spiner></Spiner>
            }
            else
            {
                <div class="row">
                    <div class="col-xl-3 col-sm-6 col-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="dash-widget-header">
                                    <span class="dash-widget-icon text-primary border-primary">
                                        <i class="oi oi-people"></i>
                                    </span>
                                    <div class="dash-count">
                                        <h3>@model.LawyersCount.ToString()</h3>
                                    </div>
                                </div>
                                <div class="dash-widget-info">
                                    <h6 class="text-muted">Адвокати</h6>
                                    <div class="progress progress-sm">
                                        <div class="progress-bar bg-primary w-50"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-3 col-sm-6 col-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="dash-widget-header">
                                    <span class="dash-widget-icon text-success">
                                        <i class="oi oi-people"></i>
                                    </span>
                                    <div class="dash-count">
                                        <h3>@model.UsersCount.ToString()</h3>
                                    </div>
                                </div>
                                <div class="dash-widget-info">
                                    <h6 class="text-muted">Потребители</h6>
                                    <div class="progress progress-sm">
                                        <div class="progress-bar bg-success w-50"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-3 col-sm-6 col-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="dash-widget-header">
                                    <span class="dash-widget-icon text-danger border-danger">
                                        <i class="oi oi-people"></i>
                                    </span>
                                    <div class="dash-count">
                                        <h3>@model.NotaryCount.ToString()</h3>
                                    </div>
                                </div>
                                <div class="dash-widget-info">

                                    <h6 class="text-muted">Нотариуси</h6>
                                    <div class="progress progress-sm">
                                        <div class="progress-bar bg-danger w-50"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-3 col-sm-6 col-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="dash-widget-header">
                                    <span class="dash-widget-icon text-warning border-warning">
                                        <i class="fe fe-folder"></i>
                                    </span>
                                    <div class="dash-count">
                                        <h3>@model.AppointmentCount.ToString()</h3>
                                    </div>
                                </div>
                                <div class="dash-widget-info">
                                    <h6 class="text-muted">Срещи</h6>
                                    <div class="progress progress-sm">
                                        <div class="progress-bar bg-warning w-50"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <Virtualize Items="@model.Ratings" Context="review" TItem="RatingsViewModel" ItemSize="10">
                        <div class="col-xl-3 col-sm-6 col-12">
                            <div class="card flex-fill">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">Коментар от @review.UserFirstName</h5>
                                </div>
                                <div class="card-body">
                                    <p class="card-text">@review.Commentary</p>
                                    <div>
                                        <p>Цензорирай</p>
                                        <RadzenSwitch style="margin-left: 1rem" Change=@(args => OnChangeCenzored(args, @review.Id)) />
                                    </div>
                                    <div>
                                        <p>Одобри</p>
                                        <RadzenSwitch style="margin-left: 1rem" Change=@(args => OnChangeModerated(args, @review.Id)) />
                                    </div>

                                </div>
                            </div>
                        </div>
                    </Virtualize>
                    @*@foreach (var review in model.Ratings)
                        {
                        <div class="col-xl-3 col-sm-6 col-12">
                        <div class="card flex-fill">
                        <div class="card-header">
                        <h5 class="card-title mb-0">Коментар от @review.UserFirstName</h5>
                        </div>
                        <div class="card-body">
                        <p class="card-text">@review.Commentary</p>
                        <p>Цензорирай</p>
                        <RadzenSwitch style="margin-left: 1rem" Change=@(args => OnChangeCenzored(args, @review.Id)) />
                        <p>Одобри</p>
                        <RadzenSwitch style="margin-left: 1rem" Change=@(args => OnChangeModerated(args, @review.Id)) />
                        </div>
                        </div>
                        </div>
                        }*@
                </div>
            }
        </div>

    </Authorized>
    <NotAuthorized>
        @{
            navigationManager.NavigateTo("/notfound");
        }
    </NotAuthorized>
</AuthorizeView>

@code {

    bool disabled = true;

    private AdminDashboardViewModel? model;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetFromJsonAsync<AdminDashboardViewModel>("Administrator/GetDashboardInformation");
        if (response != null)
        {
            model = response;
        }

    }
    void RedirectTo()
    {
        this.NavigationManager.NavigateTo("createuser");
    }
    async Task OnChangeModerated(object args, string data)
    {
        var response = await this.Http.PutAsJsonAsync("Administrator/ModerateReview", data);
        if (!response.IsSuccessStatusCode)
        {

        }
    }
    async Task OnChangeCenzored(object args, string data)
    {
        var response = await this.Http.PutAsJsonAsync("Administrator/CenzoredReview", data);
        if (!response.IsSuccessStatusCode)
        {

        }
    }
}