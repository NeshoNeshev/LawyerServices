@page "/notary-appointments"

@layout Shared.AdministrationLayout

@using LaweyrServices.Web.Shared.WorkingTimeModels
@inject HttpClient Http
@*@inject NorthwindService service*@


<AuthorizeView Roles="Lawyer">
    <Authorized>
        <div class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-9 col-lg-10 col-xl-11">
                        @if (wtexceptions == null)
                        {
                            <p>loading</p>
                        }
                        else if (!wtexceptions.Any())
                        {
                            <p>nqma zapis</p>
                        }
                        else
                        {
                            @* <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => Export("excel"))" Class="mb-4 mr-2" />

                                <RadzenButton Text="Export CSV" Icon="wrap_text" Click="@(args => Export("csv"))" Class="mb-4" />*@
                            <RadzenDataGrid @ref="grid" AllowFiltering="true" FilterMode="FilterMode.Simple" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="5" AllowSorting="true" Data="@wtexceptions" TItem="WorkingTimeExceptionBookingModel">
                                <Columns>
                                    <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="FirstName" Title="Имена" />
                                    <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Context="Email" Property="Email" Title="Имейл" Filterable="true" Sortable="true">
                                        <Template Context="data">
                                            <a href="mailto:@data.Email">@data.Email</a>
                                        </Template>
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Context="PhoneNumber" Property="PhoneNumber" Title="Телефон" TextAlign="TextAlign.Center">
                                        <Template Context="data">
                                            <a href="tel:@data.PhoneNumber">@data.PhoneNumber</a>
                                        </Template>
                                    </RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="AppointmentType" Title="Услуга" TextAlign="TextAlign.Center"></RadzenDataGridColumn>
                                    <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="StarFrom" Title="Време" FormatString="{0:d/M/yyyy HH:mm}" TextAlign="TextAlign.Center" />
                                    <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="MoreInformation" Title="Допълнителна Информация" FormatString="{0:P}" TextAlign="TextAlign.Center" />
                                </Columns>
                            </RadzenDataGrid>
                        }
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        @{
            NavigationManager.NavigateTo("/Profile");
        }
    </NotAuthorized>
</AuthorizeView>
@code {
    RadzenDataGrid<WorkingTimeExceptionBookingModel> grid;

    List<WorkingTimeExceptionBookingModel>? wtexceptions;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        //var response = Http.GetAsync("Lawyer/DeleteWorkingTimeExceptionWhenDateIsOver");
        wtexceptions = await Http.GetFromJsonAsync<List<WorkingTimeExceptionBookingModel>>("Appointment/GetAllNotaryRequsts");
    }

    //public void Export(string type)
    //{
    //    service.Export("OrderDetails", type, new Query() { OrderBy = grid.Query.OrderBy, Filter = grid.Query.Filter });
    //}
}
