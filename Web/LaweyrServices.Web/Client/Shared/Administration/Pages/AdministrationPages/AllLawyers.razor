@page "/alllawyers"
@using LaweyrServices.Web.Client.Shared.Administration.Pages.Components
@using LaweyrServices.Web.Shared.AministrationViewModels
@using Microsoft.AspNetCore.Authorization


@layout Shared.AdministrationLayout

@inject NavigationManager navigationManager
@inject HttpClient Http



<div class="content">
    <AuthorizeView Roles="Administrator">
        <Authorized>
            <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true"
                            FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@allLawyers" TItem="AllLawyersAdministrationViewModel" ColumnWidth="300px"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            LogicalFilterOperator="LogicalFilterOperator.Or">
                <Columns>

                    <RadzenDataGridColumn TItem="AllLawyersAdministrationViewModel" Title="Photo" Sortable="false" Filterable="false" Width="200px">
                        <Template Context="data">
                            <RadzenImage Path="@data.ImgUrl" style="width: 40px; height: 40px; border-radius: 8px;" />
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="AllLawyersAdministrationViewModel" Property="Names" Title="Names" />
                    <RadzenDataGridColumn TItem="AllLawyersAdministrationViewModel" Property="Jurisdiction" Title="Jurisdiction" />
                    <RadzenDataGridColumn TItem="AllLawyersAdministrationViewModel" Property="PhoneVerification" Title="Верифициран" Width="150px" />
                    <RadzenDataGridColumn TItem="AllLawyersAdministrationViewModel" Context="allLawyers" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="120px">
                        <Template Context="data">
                            <button type="button" class="btn btn-warning btn-sm" @onclick="() => Modal.Open(data)">Промени</button>
                        </Template>

                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="AllLawyersAdministrationViewModel" Context="allLawyers" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="120px">
                        <Template Context="data">
                            @if (data.StopAccount == false)
                            {
                                <button type="button" class="btn btn-danger btn-sm" @onclick="() => ShureModal.Open(data.Id)">Спри</button>
                            }
                        </Template>
                        @*<button type="button" class="btn btn-warning btn-sm" @onclick="() => ShureModal.Open()">Спри</button>*@
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="AllLawyersAdministrationViewModel" Context="allLawyers" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="120px">
                        <Template Context="data">
                            @if (data.StopAccount == true)
                            {
                                <button type="button" class="btn btn-primary btn-sm" @onclick="() => OnActivate(data.Id)">Активирай</button>
                            }
                        </Template>
                        @*<button type="button" class="btn btn-warning btn-sm" @onclick="() => ShureModal.Open()">Спри</button>*@
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>

            <EditLawyerByAdministrator @ref="Modal" OnDoneCallback="OnModalDone"></EditLawyerByAdministrator>
            <SureStopCompanyModal @ref="ShureModal" OnDoneCallback="OnSure"></SureStopCompanyModal>
        </Authorized>
        <NotAuthorized>
            @{
                navigationManager.NavigateTo("/Profile", true);
            }
        </NotAuthorized>
    </AuthorizeView>
</div>


@code {
    private IEnumerable<AllLawyersAdministrationViewModel>? allLawyers;
    private EditLawyerByAdministrator Modal { get; set; }
    private SureStopCompanyModal ShureModal { get; set; }
    protected override async Task OnInitializedAsync()
    {
        allLawyers = await this.Http.GetFromJsonAsync<IEnumerable<AllLawyersAdministrationViewModel>>("Administrator/GetAllLawyers");

        await base.OnInitializedAsync();

    }
    private void OnModalDone(AllLawyersAdministrationViewModel model)
    {

    }
    private async Task OnSure(string id)
    {
        var response = await this.Http.PutAsJsonAsync("Administrator/StopAccount", id);
        if (response.IsSuccessStatusCode)
        {
            allLawyers = await this.Http.GetFromJsonAsync<IEnumerable<AllLawyersAdministrationViewModel>>("Administrator/GetAllLawyers");
        }
        StateHasChanged();
    }

    private async Task OnActivate(string id)
    {
        var response = await this.Http.PutAsJsonAsync("Administrator/ActivateAccount", id);
        if (response.IsSuccessStatusCode)
        {
            allLawyers = await this.Http.GetFromJsonAsync<IEnumerable<AllLawyersAdministrationViewModel>>("Administrator/GetAllLawyers");
        }
        StateHasChanged();
    }
}