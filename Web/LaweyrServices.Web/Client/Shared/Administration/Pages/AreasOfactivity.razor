@page "/activity"

@using System.Security.Claims
@using LaweyrServices.Web.Shared.AreasOfActivityViewModels
@using LaweyrServices.Web.Shared.LawyerViewModels
@using Microsoft.AspNetCore.Identity

@inject NavigationManager navigationManager
@inject HttpClient Http


@layout Shared.AdministrationLayout
<AuthorizeView Roles="Lawyer">
    <Authorized>
        <div class="container card-3">
            <h3 class="text-center">Изберете сфери в които практикувате</h3>
            <div class="row">
                @if (allAreas == null)
                {
                    <p>loading9</p>
                }
                else
                {
                    @foreach (var item in allAreas)
                    {
                        <div class="col-sm-4 ">
                            <div class="card marg">
                                <div class="card-body">
                                    @if (existingAreas != null)
                                    {
                                        @if (existingAreas.Contains(item.Id))
                                        {
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="@item.Id" onclick="@(() => OnBynd(item.Id.ToString()))">
                                                <label class="form-check-label" for="flexCheckDefault">
                                                    @item.Name
                                                </label>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="@item.Id" onclick="@(() => OnBynd(item.Id.ToString()))">
                                                <label class="form-check-label" for="flexCheckDefault">
                                                    @item.Name
                                                </label>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="@item.Id" onclick="@(() => OnBynd(item.Id.ToString()))">
                                            <label class="form-check-label" for="flexCheckDefault">
                                                @item.Name
                                            </label>
                                        </div>

                                    }
                                </div>
                            </div>
                        </div>
                    }
                }

                <button class="btn btn-primary" onclick="@OnSaveAreas">Click me</button>
            </div>
        </div>

       @* <div class="container card-3">
            <h3 class="text-center"> Добавете допълнителна информация</h3>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="УебСайт" @bind="@moreInformation.WebSite" rows="3"></textarea>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Езици" @bind="@moreInformation.Languages" rows="3"></textarea>

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Квалификации" @bind="moreInformation.Qualifications" rows="3"></textarea>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Образование" @bind="moreInformation.Education" rows="3"></textarea>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Опит" @bind="moreInformation.Experience" rows="3"></textarea>
                    </div>
                </div>
                <button class="btn btn-primary" onclick="@OnSaveInfo">Save</button>
            </div>
        </div>
*@
    </Authorized>
    <NotAuthorized>
        @{
            navigationManager.NavigateTo("/Profile");
        }
    </NotAuthorized>
</AuthorizeView>


<style>

    .form-control:focus {
        border-color: #FF0000;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 0, 0, 0.6);
    }

    .card-3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }

    .marg {
        margin-bottom: 10px;
        border-color: blanchedalmond;
    }
</style>
@code {



    private List<AreasOfActivityViewModel>? allAreas;
    private MoreInformationInputModel? moreInformation;
    private List<string>? existingAreas;
    private IList<string>? areasToAdd;

    protected override async Task OnInitializedAsync()
    {

        allAreas = await Http.GetFromJsonAsync<List<AreasOfActivityViewModel>>("Areas/GetAllAreas");
        //var response = await Http.GetFromJsonAsync<MoreInformationInputModel>("Lawyer/GetMoreInformation");
        //if (response != null)
        //{
        //    moreInformation = response;
        //}

        areasToAdd = new List<string>();
        //tested
        existingAreas = await Http.GetFromJsonAsync<List<string>>("Areas/GetAllAreasByCompanyId");

    }
    private void HandleValidSubmit()
    {

    }


    void OnSaveInfo()
    {

        var response = Http.PostAsJsonAsync("Areas/OnSaveInformation", moreInformation);
    }
    void OnBynd(string value)
    {
        //check state to click many times
        if (areasToAdd.Contains(value))
        {
            areasToAdd.Remove(value);
        }
        else
        {
            areasToAdd.Add(value);
        }
    }
    public async Task OnSaveAreas()
    {
        //var principal = httpContextAccessor.HttpContext?.User;
        //var userId = this.userService.GetUserId(principal);

        await Http.PostAsJsonAsync("Areas/CreateAreas", areasToAdd);
    }
}
