@page "/appointments"

@using LaweyrServices.Web.Shared.WorkingTimeModels
@using Microsoft.AspNetCore.Authorization

@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager


@layout Shared.AdministrationLayout

@inject HttpClient Http

<AuthorizeView Roles="Lawyer">
    <Authorized>
        <!-- Page Content -->
        <div class="content">
            <div class="container">

                <div class="row">


                    <div class="col-md-10 col-lg-11 col-xl-12">
                        <div class="appointments">
                            @if (wtexceptions == null)
                            {
                                <p>loading</p>
                            }
                            else if (!wtexceptions.Any())
                            {
                                <p>nqma zapis</p>
                            }
                            else
                            {
                                <RadzenDataGrid AllowFiltering="true" 
                                            FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@wtexceptions" TItem="WorkingTimeExceptionBookingModel" ColumnWidth="150px"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            LogicalFilterOperator="LogicalFilterOperator.Or">
                                    <Columns>

                                        <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Title="Photo" Sortable="false" Filterable="false" Width="100px">
                                            <Template Context="data">
                                                <RadzenImage Path="@data.User.ImgUrl" style="width: 40px; height: 40px; border-radius: 8px;" />
                                            </Template>
                                        </RadzenDataGridColumn>
                                        <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="FirstName" Title="FirstName" />
                                        <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="LastName" Title="LastName" Width="150px" />
                                        <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="PhoneNumber" Title="PhoneNumber" />
                                        <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="StarFrom" Title="StarFrom" FormatString="{0:d}" />
                                        <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="Email" Title="Email" />
                                        <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Property="MoreInformation" Title="MoreInformation" />
                                        <RadzenDataGridColumn TItem="WorkingTimeExceptionBookingModel" Context="sampleBlazorModelsSampleOrder" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="120px">
                                            <Template Context="IsApproved">
                                                @if (IsApproved.IsApproved == false)
                                                {
                                                     <RadzenButton Click=@(args => OnClick(IsApproved.Id)) Text="Primary" ButtonStyle="ButtonStyle.Primary" />
                                                }
                                                else
                                                {

                                                     <span class="badge badge-pill bg-danger inv-badge">Paid</span>
                                                }

                                               
                                            </Template>
                                            @*<EditTemplate Context="IsApproved">
                                                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary" Class="m-1" >
                                                </RadzenButton>
                                                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Class="m-1">
                                                </RadzenButton>
                                            </EditTemplate>*@
                                        </RadzenDataGridColumn>
                                        @* <RadzenSwitch style="margin-left: 1rem" @bind-Value=@disabled />*@
                                    </Columns>
                                </RadzenDataGrid>

                            }

                            <!-- Appointment List -->

                        </div>
                    </div>
                </div>

            </div>

        </div>
        <!-- /Page Content -->
    </Authorized>
    <NotAuthorized>

        @{
            navigationManager.NavigateTo("/Profile");
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    List<WorkingTimeExceptionBookingModel>? wtexceptions;

    [Parameter]
    public bool Aproved { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        //          #if DEBUG
        //    await Task.Delay(10000);
        //#endif
        base.OnInitialized();

        //var response = Http.GetAsync("Lawyer/DeleteWorkingTimeExceptionWhenDateIsOver");
        wtexceptions = await Http.GetFromJsonAsync<List<WorkingTimeExceptionBookingModel>>("Company/GetAllRequsts");
    }
    async void OnClick(string Id)
    {
        await Http.PostAsJsonAsync("Company/PostApproved", Id);
    }
}
