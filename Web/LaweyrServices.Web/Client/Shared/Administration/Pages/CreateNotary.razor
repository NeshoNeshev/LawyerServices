@page "/createnotary"

@using LaweyrServices.Web.Shared.AministrationViewModels
@using LaweyrServices.Web.Shared.NotaryModels
@using LawyerServices.Data.Models.Enumerations
@using Microsoft.AspNetCore.Authorization
@layout Shared.AdministrationLayout

@attribute [Authorize(Roles = "Administrator")]
@inject HttpClient Http

<h3 class="text-center">Administration</h3>


<div class="row mt-2">
    <div class="col-lg-6">
        
        @if (notaryModel == null)
        {
            <div>loading</div>
        }
        else
        {
            <!-- Register Form -->
            <EditForm Model="@notaryModel" OnValidSubmit="@OnSubmit" class="form-group" enctype="multipart/form-data">
                <DataAnnotationsValidator />

                <div class="form-group form-focus">
                    <InputText class="form-control floating" id="names" placeholder="Вашите имена" @bind-Value="notaryModel.Names" />
                    <ValidationMessage For="@(() => notaryModel.Names)" />
                    <label class="focus-label">Имена</label>
                </div>
                <div class="form-group form-focus">
                    <RadzenDropDown AllowClear="true" TValue="string" Class="w-100"
                                Data=@(townModel?.Select(c => c.Name).Distinct())
                                Change=@(args => OnChange(args, "DropDown")) Placeholder="Изберете град" />
                </div>
                <div class="form-group form-focus">
                    <InputText class="form-control" id="email" placeholder="Имейл" @bind-Value="notaryModel.Email" />
                    <ValidationMessage For="@(() => notaryModel.Email)" />
                    <label class="focus-label">Имейл</label>
                </div>
                 <div class="form-group form-focus">
                    <InputText class="form-control" id="website" placeholder="WebSite" @bind-Value="notaryModel.WebSite" />
                    <ValidationMessage For="@(() => notaryModel.WebSite)" />
                    <label class="focus-label">Сайт</label>
                </div>
                <div class="form-group form-focus">
                    <InputText class="form-control" id="phone" placeholder="Телефон" @bind-Value="notaryModel.PhoneNumber" />
                    <ValidationMessage For="@(() => notaryModel.PhoneNumber)" />
                    <label class="focus-label">Телефон</label>
                </div>
                 <div class="form-group form-focus">
                    <InputTextArea class="form-control" id="text" placeholder="Телефон" @bind-Value="notaryModel.About" />
                    <ValidationMessage For="@(() => notaryModel.About)" />
                    <label class="focus-label">About</label>
                </div>
                <div class="form-group form-focus">
                    <InputSelect @bind-Value="notaryModel.Role">
                        @foreach (Enum item in Enum.GetValues(typeof(Profession)))
                        {
                        <option value="@item">@item.ToString()</option>
                        }
                </InputSelect>
                <ValidationMessage For="@(() => notaryModel.Role)" />
                <label class="focus-label">Роля</label>
            </div>
            
            <div class="form-group form-focus">
                <InputText class="form-control" id="address" placeholder="Адрес" @bind-Value="notaryModel.AddressLocation" />
                <ValidationMessage For="@(() => notaryModel.AddressLocation)" />
                <label class="focus-label">Адрес</label>
            </div>
            <div class="checkbox">
                <InputCheckbox @bind-Value="notaryModel.PhoneVerification" />
                <ValidationMessage For="@(() => notaryModel.PhoneVerification)" />
                <label class="focus-label">Проведен разговор</label>
            </div>
            @*<div class="text-right">
                <a class="forgot-link" href="login.html">Already have an account?</a>
                </div>*@
            @*<button class="btn btn-primary btn-lg" type="submit">Signup</button>*@
            <div class="text-center">
                <button class="btn btn-border-d btn-round btn-block" type="submit">Submit</button>
            </div>
        </EditForm>
            <!-- /Register Form -->
        }


    </div>
</div>
@code {

    private IEnumerable<TownViewModel>? townModel;
    private CreateNotaryModel? notaryModel = new CreateNotaryModel();
    private Profession profesion;

    protected override async Task OnInitializedAsync()
    {
    //                             #if DEBUG
    //    await Task.Delay(10000);
    //        #endif
        this.townModel = await Http.GetFromJsonAsync<IEnumerable<TownViewModel>>("Administrator/GetTowns");
    }
    private async Task OnSubmit()
    {


        var response = await Http.PostAsJsonAsync("Administrator/CreateNotary", notaryModel);
        if (response.IsSuccessStatusCode)
        {
            notaryModel = new CreateNotaryModel();
        }
      
        //test

        //await this.requestService.SetIsApproved(exist.Id);

    }
      void OnChange(object value, string name)
    {
        notaryModel.TownName = value.ToString();

    }
}
