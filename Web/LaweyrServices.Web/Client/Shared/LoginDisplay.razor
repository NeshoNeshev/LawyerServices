@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        @if (context.User.IsInRole("Administrator"))
        {
            <a href="administration">Hello, @context.User.Identity?.Name!</a>
        }
        else if(context.User.IsInRole("Lawyer"))
        {
             <a href="lawyer-profile">Hello, @context.User.Identity?.Name!</a>
        }
        else if(context.User.IsInRole("Notary"))
        {
           <a href="notary-profile">Hello, @context.User.Identity?.Name!</a>
        }
        else
        {
            
             <a href="profile">Hello, @context.User.Identity?.Name!</a>
        }
        
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">изход</button>
    </Authorized>
    <NotAuthorized>
        <div >
             <a href="authentication/register">регистрация</a>
        </div>
       
       <div style="padding-right: 10px;">
           <a href="authentication/login">вход</a>
       </div>
        
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
