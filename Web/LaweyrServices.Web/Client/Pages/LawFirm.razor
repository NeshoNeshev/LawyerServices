@page "/law-firm/{Id}"
@using LaweyrServices.Web.Shared.LawFirmModels
@using LaweyrServices.Web.Shared.LawyerViewModels
@using LaweyrServices.Web.Shared.WorkingTimeModels
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject IHttpClientFactory ClientFactory
@inject AuthenticationStateProvider AuthenticationStateProvider



<div class="content">
    <div class="container-fluid">

        <!-- Doctor Widget -->

        <div class="card-body">
            <div class="doctor-widget">
                <div class="doc-info-left">
                    <div class="doctor-img">
                        <img src="@response?.ImgUrl" class="img-fluid" alt="@response?.Name">
                    </div>
                    <div class="doc-info-cont">
                        <h1>@response?.Name</h1>
                        @*<div class="rating">
                            <RadzenRating ReadOnly="true" Stars="5" Value="4" />
                            <span class="d-inline-block average-rating">(17)</span>
                            <h3 class="doc-location"><i class="oi oi-map-marker"></i> @response?.Address    <a href="javascript:void(0);">Get Directions</a></h3>
                        </div>*@
                        <p class="doc-location"><i class="fas fa-map-marker-alt"> </i> @response?.TownName/ @response?.Address <a href=@($"https://www.google.com/maps/place/{response?.TownName} {response?.Address}") target="blank"> намери адрес</a></p>
                        <h3>За @response?.Name</h3>
                        @*<p class="doc-speciality">dasasdsad</p>*@
                        <p>@response?.About</p>
                       @* <div class="doctor-action">
                            <a href="javascript:void(0)" class="btn btn-white fav-btn">
                                <i class="oi oi-globe"></i>
                            </a>
                            <a href="chat.html" class="btn btn-white msg-btn">
                                <i class="oi oi-phone"></i>
                            </a>
                            <a href="javascript:void(0)" class="btn btn-white call-btn" data-toggle="modal" data-target="#voice_call">
                                <i class="oi oi-phone"></i>
                            </a>

                        </div>*@
                        @* <div class="clinic-details">
                            <p class="doc-location"><i class="fas fa-map-marker-alt"></i> Newyork, USA - <a href="javascript:void(0);">Get Directions</a></p>
                            <ul class="clinic-gallery">

                            </ul>
                            </div>*@

                    </div>
                </div>

            </div>
        </div>

        <!-- /Doctor Widget -->
        <!-- Doctor Details Tab -->
        @if (response?.Companies == null)
        {
            <p>loading</p>
        }
        else
        {
             @foreach (var lawyer in response.Companies)
        {
            <div class="card shadow">
                <div class="card-body">
                    <div class="doctor-widget">
                        <div class="doc-info-left">
                            <div class="doctor-img">
                                <a href="/lawyer/@lawyer?.Id">
                                    <img src="@lawyer?.ImgUrl" class="img-fluid" alt="@lawyer?.Names">
                                </a>
                            </div>
                            <div class="doc-info-cont">
                                <h4 class="doc-name"><a href="/lawyer/@lawyer?.Id">@lawyer?.Names</a></h4>
                                <h5 class="doc-department"><img src="/images/lawyer-1.png" class="img-fluid" width="19" height="19" alt="speciality">Адвокат</h5>
                                
                                <div class="clinic-services">
                                    @foreach (var item in lawyer.AreasCompanies)
                                    {
                                        <span>@item.AreasOfActivity?.Name</span>
                                    }

                                </div>
                                 <div class="clinic-details">
                                <ul class="clinic-gallery" style="list-style: none;">
                                        @if (lawyer?.FreeFirstAppointment == true)
                                        {
                                            <li><i class="oi oi-check"></i><span>Безплатна първа консултация</span></li>
                                        }
                                        @if (lawyer?.FixedCost == true)
                                        {
                                            <li><i class="oi oi-check"></i> Фиксирана цена</li>
                                        }
                                        @if (lawyer?.NoWinNoFee == true)
                                        {
                                            <li><i class="oi oi-check"></i> Без Победа Без цена</li>
                                        }
                                        @if (lawyer?.MeetingClientLocation == true)
                                        {
                                            <li><i class="oi oi-check"></i> Посещение в офис на клиента</li>
                                        }
                                    </ul>
                                     </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <RadzenScheduler Data="@lawyer.WorkingTime.WorkingTimeExceptions" TItem="WorkingTimeExceptionViewModel" StartProperty="StarFrom" EndProperty="EndTo" 
                            TextProperty="AppointmentType" AppointmentSelect=@OnAppointmentSelect AppointmentRender=@OnAppointmentRender>
                                <RadzenWeekView EndTime=@TimeSpan.FromHours(20) TimeFormat="HH" />
                            </RadzenScheduler>
                           
                        </div>
                    </div>
                </div>
            </div>

        }

        }
       

        <!-- /Doctor Details Tab -->

    </div>
</div>


<style>
    .shadow {
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    }

    .doctor-img {
        -ms-flex: 0 0 250px;
        flex: 0 0 250px;
        width: 250px;
    }

        .doctor-img img {
            border-radius: 5px;
        }

    .rz-view-header .rz-slot-hour-header {
        flex: none;
        width: 25px;
    }

    .rz-event-content {
        cursor: pointer;
    }
</style>


@code {

    [Parameter]
    public string? Id { get; set; }

    private LawFirmViewModel? response;

    protected override async Task OnInitializedAsync()
    {
        //                 #if DEBUG
        //    await Task.Delay(10000);
        //#endif
        var client = ClientFactory.CreateClient("LaweyrServices.Web.ServerAPI.NoAuthenticationClient");
        try
        {
            response = await client.GetFromJsonAsync<LawFirmViewModel>($"LawFirm?lawFirmId={Id}");
            //areas = await client.GetFromJsonAsync<IEnumerable<AreasOfActivityViewModel>>("Index/GetAreas");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            this.NavigationManager.NavigateTo("/notfound");
            exception.Redirect();
        }

    }
    void OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<WorkingTimeExceptionViewModel> args)
    {
        var authState = AuthenticationStateProvider.GetAuthenticationStateAsync();

        if (!authState.Result.User.Identity.IsAuthenticated)
        {
            this.NavigationManager.NavigateTo("/Identity/Account/Login", true);
        }
        else
        {
            var wteId = args.Data.Id;
            var lawyer = response.Companies.Where(x=>x.WorkingTime.WorkingTimeExceptions.Any(x=>x.Id ==wteId)).FirstOrDefault();
            this.NavigationManager.NavigateTo($"/booking/{lawyer.Id}/{args.Data.Id}");
        }

    }

    void OnAppointmentRender(SchedulerAppointmentRenderEventArgs<WorkingTimeExceptionViewModel> args)
    {
        // Never call StateHasChanged in AppointmentRender - would lead to infinite loop

        args.Attributes["style"] = "text-align: center;";

        //if (args.Data.Text == GlobalConstants.Meeting)
        //{
            //;
        //}
    }
}
