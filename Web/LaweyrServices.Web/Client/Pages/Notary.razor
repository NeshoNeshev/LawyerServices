@page "/notary"
@page "/notary/{SearchByTown}"



@using LaweyrServices.Web.Shared.AministrationViewModels
@using LaweyrServices.Web.Shared.NotaryModels
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Text.Json
@using Microsoft.JSInterop
@inject IHttpClientFactory ClientFactory



<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12 col-lg-4 col-xl-3 ">
                <!-- Search Filter -->
                <div class="card search-filter shadow sticky-map active">
                    <div class="card-header">
                        <h4 class="card-title mb-0 text-center">Търси нотариус</h4>
                    </div>
                    <div class="card-body">
                        <div class="filter-widget">
                            <RadzenDropDown AllowClear="false" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" Class="w-100"
                                            Placeholder="@town" Data=@model?.AllTowns TextProperty="Name" ValueProperty="Name" Change=@(args => OnChange(args, "DropDown with placeholder")) />
                        </div>
                        <div class="filter-widget">
                            <RadzenAutoComplete FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data=@model?.AllNotarys TextProperty="Names" Change=@(args => OnSearchNotary(args, "AutoComplete")) Style="width: 100%;" />
                        </div>
                        <div class="text-center">
                            <button class="btn btn-border-d btn-round btn-block" @onclick="OnSearch" type="button">Филтрирай</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-lg-8 col-xl-9">
                @if (this.model == null)
                {
                    <p><em>Loading...</em></p>
                }
                else if (!this.model.AllNotarys.Any())
                {
                    <RadzenCard class="m-3 shadow"> <h3 class="h5 text-center">Не открихме нотариус отговарящи на вашите критерии</h3></RadzenCard>
                }
                else
                {
                    @foreach (var notary in model.AllNotarys)
                    {
                        <div class="card shadow">
                            <div class="card-body">
                                <div class="doctor-widget">
                                    <div class="doc-info-left">
                                        <div class="doctor-img">
                                            <a href="/notary-office/@notary.Id">
                                                <img src="@notary.ImgUrl" class="img-fluid" alt="user image">
                                            </a>
                                        </div>
                                        <div class="doc-info-cont">
                                            <h4 class="doc-name"><a href="/notary-office/@notary.Id">@notary.Names</a></h4>
                                            <h5 class="doc-department" style="margin-top:15px;"><img src="/images/lawyer-1.png" class="img-fluid" width="19" height="19" alt="speciality">Нотариус</h5>
                                            <p class="doc-location" style="margin-top:15px;"><i class="fas fa-map-marker-alt"> </i> @notary?.TownName/ @notary?.Address <a href=@($"https://www.google.com/maps/place/{notary?.TownName} {notary?.Address}") target="blank"> намери адрес</a></p>
                                            <div class="clinic-details">
                                                <ul class="clinic-gallery">
                                                    @if (notary?.WorkInSaturday == true)
                                                    {
                                                        <li style="float: left;"><i class="oi oi-check smallspan"></i><span class="smallspan"> Работи в събота</span></li>
                                                    }
                                                    @if (notary.WorkInSunday == true)
                                                    {
                                                        <li style="float: left;"><i class="oi oi-check smallspan"></i><span class="smallspan"> Работи в неделя</span></li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="doc-info-right">
                                        <div class="clini-infos">
                                            <ul>
                                                <li><i class="oi oi-globe"></i><a href="@notary?.WebSite" class="text-dark"> Виж сайта</a></li>
                                                <li><i class="oi oi-envelope-closed"></i><a href="mailto:@notary?.OfficeEmails?.Split(" ").First()" class="text-dark">Изпрати имейл</a></li>
                                                <li><i class="oi oi-phone"></i><a href="tel:@notary.PhoneNumbers?.Split(" ").ToArray().First()" class="text-dark"> Обади се</a></li>
                                                <li><i class="oi oi-map-marker"></i><a href=@($"https://www.google.com/maps/place/{notary?.TownName} {notary?.Address}") target="blank" class="text-dark"> @notary?.TownName/ @notary?.Address</a></li>
                                            </ul>
                                        </div>
                                        <div class="clinic-booking">
                                            <div class="text-center">
                                                <button class="btn btn-border-d btn-round btn-block" onclick="location.href='/notary-office/@notary?.Id'" type="button">Профил</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

<style>

    .smallspan {
        font-size: 80%;
        color: #00900e;
        background: transparent;
    }

    .sticky {
        position: sticky !important;
        position: initial !important;
    }

    .shadow {
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    }

    .marg {
        margin-top: 80px;
        margin-bottom: 120px;
    }

    .containershadow {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }

    .shading {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
        background-color: #00BFFF;
    }

    .btn.btn-round {
        border-radius: 2px;
    }

    .btn-border-d {
        background: transparent;
        border: 1px solid #111111;
        color: #111;
    }

    .btn {
        border-radius: 0;
        font-family: "Roboto Condensed", sans-serif;
        text-transform: uppercase;
        letter-spacing: 2px;
        font-size: 11px;
        padding: 8px 37px;
    }

        .btn.btn-border-d:hover,
        .btn.btn-border-d:focus {
            background: #111111;
            color: #fff;
        }

    .btn-block {
        display: block;
        width: 100%;
    }

    a .btn {
        transition: all 0.125s ease-in-out 0s;
    }
</style>

@code {

    [Parameter]
    public string? SearchByTown { get; set; } = null;

    bool? workSunday;

    bool? workSaturday;

    string? town;


    [Parameter]
    public string? source { get; set; } = null;

    NotaryPageViewModel? model;
    private IJSObjectReference? objectReference;
    HttpClient? client;

    protected override async Task OnInitializedAsync()
    {


        //           #if DEBUG
        //   await Task.Delay(10000);
        //#endif
        client = ClientFactory.CreateClient("LaweyrServices.Web.ServerAPI.NoAuthenticationClient");
        try
        {
            //count = await client.GetFromJsonAsync<int>("Lawyer/Count");
            source = $"https://maps.google.com/maps?q={SearchByTown}&t=&z=13&ie=UTF8&iwloc=&output=embed";


            this.model = await client?.GetFromJsonAsync<NotaryPageViewModel>($"Notary/OnGet");

            await base.OnInitializedAsync();


        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            objectReference = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./scripts/main.js");
        }
        await base.OnAfterRenderAsync(firstRender);

    }
    private void OnScroll()
    {
        objectReference?.InvokeVoidAsync("theiaStickySidebar");
    }
    private async Task SundayChecked(ChangeEventArgs ev)
    {
        workSunday = (Boolean)ev.Value;
        StateHasChanged();
    }
    private async Task SaturdayChecked(ChangeEventArgs ev)
    {

        workSaturday = (Boolean)ev.Value;
        StateHasChanged();
    }
    void OnChange(object value, string name)
    {
        town = value.ToString();
        SearchByTown = value.ToString();

        StateHasChanged();
    }

    async void OnSearch()
    {

        source = $"https://maps.google.com/maps?q={SearchByTown}&t=&z=13&ie=UTF8&iwloc=&output=embed";
        this.model.AllNotarys = await client?.GetFromJsonAsync<IEnumerable<NotaryViewModel>>($"Notary/OnSearch?townName={SearchByTown}");
        workSaturday = false;
        workSunday = false;
        this.NavigationManager.NavigateTo($"notary/{SearchByTown}");
        StateHasChanged();

    }
    void OnSearchNotary(object value, string name)
    {
        var exist = model.AllNotarys.FirstOrDefault(x => x.Names.ToLower() == value.ToString().ToLower());
        if (exist != null)
        {
            this.NavigationManager.NavigateTo($"notary-office/{exist.Id}");
        }
    }

}