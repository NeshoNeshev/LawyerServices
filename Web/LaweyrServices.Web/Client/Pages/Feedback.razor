@page "/feedback/{LawyerId}/{WteId}"
@using LaweyrServices.Web.Shared.LawyerViewModels
@using LaweyrServices.Web.Shared.RatingModels
@using LaweyrServices.Web.Shared.WorkingTimeModels
@inject HttpClient Http

<section class="section section-doctor">
    <div class="container">
        <div class="col-lg-12">
            <div class="Scriptcontent">
                <div class="feedback">
                    <p>
                        Уважаеми клиенти,<br>
                        Благодарим ви, че използвахте Суперадвокат за да изберете адвокат за вас. Бихте ли оценили как се
                        е справил адвокат @lawyer?.First().Names . Моля, отделете малко време, за да ни дадете обратна връзка, тъй като тя ще  помогне на потрбителите да  на правят правилен избор.
                    </p>
                    <h4>Моля, оценете Адвокат @lawyer?.First().Names със следните параметри</h4>
                    @if (inputModel == null)
                    {
                        <p>loading</p>
                    }
                    else
                    {
                        <EditForm Context="Form" Model="@inputModel" OnValidSubmit="@HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <label>1. Цялостно обслужване ?</label><br>
                            <span>
                                <RadzenRating Change=@(args => OnChangeServiceGreade(args, "Rating with 5 stars")) />
                                <RadzenRequiredValidator Component="inputModel.ServiceGreade" Text="First name is required" Style="position: absolute" />
                            </span>
                            <hr>
                            <label>2. Доверие</label><br>
                            <span>
                                <RadzenRating Change=@(args => OnChangeTrustworthyGreade(args, "Rating with 5 stars")) />
                                <RadzenRequiredValidator Component="inputModel.TrustworthyGreade" Text="First name is required" Style="position: absolute" />
                            </span>
                            <hr class="survey-hr">
                            <label>4. Any Other suggestions:</label><br /><br />
                         <InputTextArea @bind-Value="inputModel.Commentary" cols="75" name="commentText" rows="5" style="100%"></InputTextArea><br>
                          <ValidationMessage For="@(() => inputModel.Commentary)" />  
                         <br>
                            <div class="clear"></div>
                            <input style="background:#43a7d5;color:#fff;padding:12px;border:0" type="submit" value="Submit your review">&nbsp;
                        </EditForm>
                    }

                </div>

            </div>
        </div>
    </div>
</section>

@code {


    [Parameter]
    public string? LawyerId { get; set; }

    [Parameter]
    public string? WteId { get; set; }

    private IEnumerable<LawyerToReviewViewModel>? lawyer;

    public RatingInputModel? inputModel;
    bool? exist;

    protected override async Task OnInitializedAsync()
    {
        inputModel = new RatingInputModel();
        //exist = await this.Http.GetFromJsonAsync<bool>($"Review/ExistingReview?id={WteId}");
        if (exist == true)
        {
            NavigationManager.NavigateTo("/");

        }
        lawyer = await this.Http.GetFromJsonAsync<IEnumerable<LawyerToReviewViewModel>>($"Review/GetLawyer?lawyerId={LawyerId}");

        await base.OnInitializedAsync();

    }
    private async void HandleValidSubmit()
    {
        inputModel.CompanyId = LawyerId;
        var response = await this.Http.PostAsJsonAsync("Review/CreateRatingAsync", inputModel);
        if (response.IsSuccessStatusCode)
        {
            
        }
        // Process the valid form
    }
    void OnChangeServiceGreade(int value, string name)
    {
        inputModel.ServiceGreade = (byte)value;
    }
    void OnChangeTrustworthyGreade(int value, string name)
    {
        inputModel.TrustworthyGreade = (byte)value;
    }
}
