@page "/lawyers"
@page "/lawyers/{SearchByTown}"
@page "/lawyers/{SearchByTown}/{SearchByArea}"


@using LaweyrServices.Web.Shared.AministrationViewModels
@using LaweyrServices.Web.Shared.AreasOfActivityViewModels
@using LaweyrServices.Web.Shared.LawyerViewModels
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Text.Json

@inject IHttpClientFactory ClientFactory



<div class="content">
    <div class="container-fluid">

        <div class="row">
            <div class="col-md-12 col-lg-4 col-xl-3 theiaStickySidebar ">

                <!-- Search Filter -->
                <div class="card search-filter shadow" style="margin-top: 12px; position:sticky;">
                    <div class="card-header">
                        <h4 class="card-title mb-0">Search Filter</h4>
                    </div>
                    <div class="card-body">
                        <div class="filter-widget">
                            <RadzenDropDown AllowClear="false" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" Class="w-100"
                                            Placeholder="@town" Data=@towns TextProperty="Name" ValueProperty="Name" Change=@(args => OnChange(args, "DropDown with placeholder")) />
                            @*<RadzenDropDown AllowClear="false" TValue="string" Placeholder="@SearchByTown" Class="w-100"
                                Data=@(towns.Select(c => c.Name).Distinct())
                                Change=@(args => OnChange(args, "DropDown")) />*@
                        </div>
                        <div class="filter-widget">
                            <RadzenDropDown AllowClear="false" TValue="string" Placeholder="@area" Class="w-100"
                                            Data=@(areas?.Select(c => c.Name).Distinct())
                                            Change=@(args => OnChangeArea(args, "DropDown")) />

                        </div>
                        <div class="filter-widget">
                            <h4>Select Specialist</h4>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="select_specialist" @onchange="FreeFirstAppoitmentCheck">
                                    <span class="checkmark"></span> Безплатна първа консултация
                                </label>
                            </div>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="select_specialist">
                                    <span class="checkmark"></span> Фиксирана цена
                                </label>
                            </div>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="select_specialist" @onchange="NoWinNoFeetCheck">
                                    <span class="checkmark"></span> Без победа, без такса
                                </label>
                            </div>

                        </div>
                        <div class="text-center">
                            <button class="btn btn-border-d btn-round btn-block" @onclick="OnSearch" type="button">Филтрирай</button>
                        </div>
                        @*  <div class="btn-search">
                            <button type="button" @onclick="OnSearch" class="btn btn-block">Search</button>
                            </div>*@
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-lg-8 col-xl-9">
                @if (this.lawyers == null)
                {
                    <p><em>Loading...</em></p>
                }
                else if (!this.lawyers.Any())
                {
                    <RadzenCard class="m-3 shadow">
                        <div class="box search-results-not-found">
                            <div class="row">
                                <div class="col-sm-12 col-xl-6 col-md-6 text-center">
                                    <div class="icon-circle gray medium">
                                        <i class="fa fa-search"></i>
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xl-6 col-md-6">
                                    <h4>Не са открити адвокати, които отговарят на това търсене</h4>
                                    <p class="text-muted">Всеки ден добавяме нови адвокати, така че опитайте по-късно или пробвайте с други критерии.</p>
                                </div>
                            </div>
                        </div>
                    </RadzenCard>
                }
                else
                {
                    <RadzenDataList WrapItems="true" AllowPaging="true" Data="@lawyers" TItem="LawyerListItem" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Center" ShowPagingSummary="true">
                        <Template Context="lawyerslistitem">
                            <div class="card shadow">
                                <div class="card-body">
                                    <div class="doctor-widget">
                                        <div class="doc-info-left">
                                            <div class="doctor-img">
                                                <a href="/lawyer/@lawyerslistitem.Id">
                                                    <img src="@lawyerslistitem.ImgUrl" class="img-fluid" alt="user image">
                                                </a>
                                            </div>
                                            <div class="doc-info-cont">
                                                <h4 class="doc-name"><a href="/lawyer/@lawyerslistitem.Id">@lawyerslistitem.Names</a></h4>
                                                <p class="doc-speciality">Адвокатска кантора @lawyerslistitem?.LawFirmName</p>
                                                <h5 class="doc-department"><img src="/images/lawyer-1.png" class="img-fluid" width="19" height="19" alt="speciality">Адвокат</h5>
                                                <div class="rating" style="font-size: 80%;">
                                                    <RadzenRating ReadOnly="true" Stars="5" Value="4" />
                                                    <span class="d-inline-block average-rating countposition">(17)</span>
                                                </div>
                                                <div class="clinic-details">

                                                    <ul class="clinic-gallery">
                                                        @if (lawyerslistitem?.FreeFirstAppointment == true)
                                                        {
                                                            <li style="float: left;"><i class="oi oi-check smallspan"></i><span class="smallspan"> Безплатна първа консултация</span></li>
                                                        }
                                                        @if (lawyerslistitem?.FixedCost == true)
                                                        {
                                                            <li style="float: left;"><i class="oi oi-check smallspan"></i><span class="smallspan"> Фиксирана цена</span></li>
                                                        }
                                                        @if (lawyerslistitem?.MeetingClientLocation == true)
                                                        {
                                                            <li style="float: left;"><i class="oi oi-check smallspan"></i><span class="smallspan"> Посещение в офис на клиента</span></li>
                                                        }
                                                        @if (lawyerslistitem?.NoWinNoFee == true)
                                                        {
                                                            <li style="float: left;"><i class="oi oi-check smallspan"></i><span class="smallspan"> Без Победа Без цена</span></li>
                                                        }

                                                    </ul>
                                                </div>
                                                <div class="clinic-services">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="doc-info-right">
                                            <div class="clini-infos">
                                                <ul>
                                                    <li><i class="oi oi-calendar"></i>@lawyerslistitem?.EarlyTime</li>
                                                    <li><i class="oi oi-thumb-up"></i> @lawyerslistitem?.ReviewsCount отзива</li>
                                                    <li><i class="oi oi-map-marker"></i>@lawyerslistitem?.TownName/ @lawyerslistitem?.Address</li>
                                                </ul>
                                            </div>
                                            <div class="clinic-booking">
                                                <div class="text-center">
                                                    <button class="btn btn-border-d btn-round btn-block" onclick="location.href='/lawyer/@lawyerslistitem?.Id'" type="button">запази час</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </Template>
                    </RadzenDataList>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .search-results-not-found {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        align-items: center;
    }

    .icon-circle {
        font-size: 4.5em;
        width: 150px;
        height: 150px;
        line-height: 150px;
        margin: 0 auto 30px;
        text-align: center;
        color: #fff;
        border-radius: 50%;
        background: #4bd964;
    }

    .search-results-not-found .icon-circle {
        flex-shrink: 0;
    }

    .icon-circle.medium {
        font-size: 3em;
        width: 100px;
        height: 100px;
        line-height: 100px;
    }

    .icon-circle.gray {
        color: #718096;
        background: #edf2f7;
    }

    .rz-rating .rzi-star {
        color: #fc0 !important;
    }

    .countposition {
        vertical-align: super;
    }

    .smallspan {
        font-size: 80%;
        color: #00900e;
    }

    .shadow {
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    }

    .marg {
        margin-top: 80px;
        margin-bottom: 120px;
    }

    .containershadow {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }

    .shading {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
        background-color: #00BFFF;
    }

    .btn.btn-round {
        border-radius: 2px;
    }

    .btn-border-d {
        background: transparent;
        border: 1px solid #111111;
        color: #111;
    }

    .btn {
        border-radius: 0;
        font-family: "Roboto Condensed", sans-serif;
        text-transform: uppercase;
        letter-spacing: 2px;
        font-size: 11px;
        padding: 8px 37px;
    }

        .btn.btn-border-d:hover,
        .btn.btn-border-d:focus {
            background: #111111;
            color: #fff;
        }

    .btn-block {
        display: block;
        width: 100%;
    }

    a .btn {
        transition: all 0.125s ease-in-out 0s;
    }
</style>

@code {
    int zoom = 3;
    string pagingSummaryFormat = "Displaying page {0} of {1} (total {2} records)";
    [Parameter]
    public string? SearchByTown { get; set; } = null;

    [Parameter]
    public string? SearchByArea { get; set; } = null;
    string? lawyerId;
    string? name;

    string? town;
    string? area;
    bool FreeFirstAppoitment = false;
    bool NoWinNoFee = false;
    [Parameter]
    public string? source { get; set; } = null;

    private IEnumerable<TownViewModel>? towns;
    private IEnumerable<LawyerListItem>? lawyers;
    private IEnumerable<LawyerListItem>? allLawyers;
    private IEnumerable<AreasOfActivityViewModel>? areas;
    HttpClient? client;

    protected override async Task OnInitializedAsync()
    {
        //todo: change model
        client = ClientFactory.CreateClient("LaweyrServices.Web.ServerAPI.NoAuthenticationClient");
        try
        {
            //count = await client.GetFromJsonAsync<int>("Lawyer/Count");
            source = $"https://maps.google.com/maps?q={SearchByTown}&t=&z=13&ie=UTF8&iwloc=&output=embed";
            this.areas = await client.GetFromJsonAsync<IEnumerable<AreasOfActivityViewModel>>("Company/GetAreas");

            this.towns = await client.GetFromJsonAsync<IEnumerable<TownViewModel>>("Company/GetTowns");
            var exist = towns.Any(t => t.Name == SearchByTown);
            if (!exist)
            {
                area = SearchByTown;
                town = null;
                SearchByArea = SearchByTown;
            }
            else
            {
                town = SearchByTown;
                area = SearchByArea;
            }
            this.lawyers = await client?.GetFromJsonAsync<IEnumerable<LawyerListItem>>($"Company/Search?name={name}&town={town}&area={area}");
            allLawyers = lawyers;
            await base.OnInitializedAsync();

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

    }
    private async Task FreeFirstAppoitmentCheck(ChangeEventArgs ev)
    {
        FreeFirstAppoitment = (Boolean)ev.Value;

        if (FreeFirstAppoitment == true)
        {
            if (NoWinNoFee == true)
            {
                this.lawyers = allLawyers.Where(x => x.NoWinNoFee == true && x.FreeFirstAppointment == true);
            }
            else
            {
                this.lawyers = allLawyers.Where(x => x.FreeFirstAppointment == true);
            }

        }
        else
        {
            if (NoWinNoFee == true)
            {
                this.lawyers = allLawyers.Where(x => x.NoWinNoFee == true);
            }
            else
            {
                this.lawyers = allLawyers;
            }

        }


        StateHasChanged();
    }
    private async Task NoWinNoFeetCheck(ChangeEventArgs ev)
    {
        NoWinNoFee = (Boolean)ev.Value;

        if (NoWinNoFee == true)
        {
            if (FreeFirstAppoitment == true)
            {
                this.lawyers = allLawyers.Where(x => x.NoWinNoFee == NoWinNoFee && x.FreeFirstAppointment == true);
            }
            else
            {
                this.lawyers = allLawyers.Where(x => x.NoWinNoFee == NoWinNoFee);
            }
            
        }
        else
        {
            if (FreeFirstAppoitment == true)
            {
                this.lawyers = allLawyers.Where(x => x.FreeFirstAppointment == true);
            }
            else
            {
                this.lawyers = allLawyers;
            }
        }

        StateHasChanged();
    }
    void OnChangeArea(object value, string name)
    {
        area = value.ToString();
        SearchByArea = value.ToString();
        StateHasChanged();
    }
    void OnChange(object value, string name)
    {
        town = value.ToString();
        SearchByTown = value.ToString();

        StateHasChanged();
    }
    void OnFolow(string id)
    {
        this.NavigationManager.NavigateTo($"lawyer/{id}");
    }
    async void OnSearch()
    {
        var exist = towns.Any(t => t.Name == SearchByTown);
        if (!exist)
        {
            SearchByTown = area;
            source = $"https://maps.google.com/maps?q={SearchByTown}&t=&z=13&ie=UTF8&iwloc=&output=embed";
            this.NavigationManager.NavigateTo($"lawyers/{SearchByTown}");
            StateHasChanged();
        }
        else
        {
            this.NavigationManager.NavigateTo($"lawyers/{SearchByTown}/{SearchByArea}");
        }


        this.lawyers = await client?.GetFromJsonAsync<IEnumerable<LawyerListItem>>($"Company/Search?name={name}&town={town}&area={area}");
        StateHasChanged();
    }
    private bool IsFalse(bool noWin, bool fprice)
    {
        if (noWin == false && fprice == false)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}